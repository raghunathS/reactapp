import {
  Transition_default
} from "./chunk-AVP52BKS.js";
import {
  FunnelMetrics,
  findUpUntilMultiple,
  isContainingBlock,
  nodeBelongs,
  useFunnel,
  useFunnelStep,
  useFunnelSubStep,
  useModalContext
} from "./chunk-GLRZB5YQ.js";
import {
  DATA_ATTR_FUNNEL_VALUE,
  calculateScroll,
  getAnalyticsLabelAttribute,
  getAnalyticsMetadataAttribute,
  getFirstScrollableParent,
  getFunnelValueSelector,
  getSubStepAllSelector,
  getTextFromSelector,
  scrollRectangleIntoView
} from "./chunk-A5LU4ML4.js";
import {
  Portal,
  SYSTEM,
  __awaiter,
  __rest,
  clsx_m_default,
  getBaseProps,
  getLogicalBoundingClientRect,
  nodeContains,
  useMergeRefs,
  useRandomId,
  useReducedMotion,
  useResizeObserver,
  useUniqueId,
  useVisualRefresh,
  warnOnce
} from "./chunk-X4AES4TZ.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@cloudscape-design/components/i18n/context.js
var import_react = __toESM(require_react());
var InternalI18nContext = import_react.default.createContext({
  locale: null,
  format: (_namespace, _component, _key, provided) => provided
});
function useLocale() {
  return (0, import_react.useContext)(InternalI18nContext).locale;
}
function useInternalI18n(componentName) {
  const { format } = (0, import_react.useContext)(InternalI18nContext);
  return (key, provided, customHandler) => {
    return format("@cloudscape-design/components", componentName, key, provided, customHandler);
  };
}

// node_modules/@cloudscape-design/components/icon/internal.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/icon/generated/icons.js
var import_react2 = __toESM(require_react());
var icons = {
  "add-plus": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M2.01 8h12M8 14l.01-12" })
  ),
  "anchor-link": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M5 8h6M7 12H5c-2.21 0-4-1.79-4-4s1.79-4 4-4h2M9 12h2c2.21 0 4-1.79 4-4s-1.79-4-4-4H9", className: "stroke-linejoin-round" })
  ),
  "angle-down": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m2 5 6 6 6-6", className: "stroke-linejoin-round" })
  ),
  "angle-left-double": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8 2 2 8l6 6", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M13 2 7 8l6 6", className: "stroke-linejoin-round" })
  ),
  "angle-left": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M11 2 5 8l6 6", className: "stroke-linejoin-round" })
  ),
  "angle-right-double": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m8 2 6 6-6 6", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "m3 2 6 6-6 6", className: "stroke-linejoin-round" })
  ),
  "angle-right": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m5 2 6 6-6 6", className: "stroke-linejoin-round" })
  ),
  "angle-up": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m2 11 6-6 6 6", className: "stroke-linejoin-round" })
  ),
  "arrow-down": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m3 9 5 5 5-5M8 14V1", className: "stroke-linejoin-round" })
  ),
  "arrow-left": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M7 3 2 8l5 5M2 8h13", className: "stroke-linejoin-round" })
  ),
  "arrow-right": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m9 3 5 5-5 5M14 8H1", className: "stroke-linejoin-round" })
  ),
  "arrow-up": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13 7 8 2 3 7M8 2v13", className: "stroke-linejoin-round" })
  ),
  "audio-full": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6.47 13.707 4 10.997H1v-6h3l2.47-2.71c.54-.59 1.53-.21 1.53.59v10.23c0 .8-.99 1.19-1.53.59v.01Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M10 12.997c2.76 0 5-2.24 5-5s-2.24-5-5-5" }),
    import_react2.default.createElement("path", { d: "M10 9.997c1.1 0 2-.9 2-2s-.9-2-2-2" })
  ),
  "audio-half": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M7.47 13.41 5 10.7H2v-6h3l2.47-2.71C8.01 1.4 9 1.78 9 2.58v10.23c0 .8-.99 1.19-1.53.59v.01Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M11 9.71c1.1 0 2-.9 2-2s-.9-2-2-2" })
  ),
  "audio-off": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6.47 13.41 4 10.7H1v-6h3l2.47-2.71C7.01 1.4 8 1.78 8 2.58v10.23c0 .8-.99 1.19-1.53.59v.01ZM11 5.71l3.99 4M15 5.71 11 9.7", className: "stroke-linejoin-round" })
  ),
  "backward-10-seconds": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M5.95 14.01h-.96c-.56 0-1.02-.46-1.02-1.02v-2.96c0-.56.45-1.01 1.01-1.02h.96c.56 0 1.02.45 1.02 1.02v2.96c0 .56-.46 1.02-1.02 1.02h.01Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M1 9v5", className: "stroke-linecap-square" }),
    import_react2.default.createElement("path", { d: "M1 0v5h5", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M9.976 15A7.154 7.154 0 0 0 15 8.164C15 4.204 11.804 1 7.852 1A7.148 7.148 0 0 0 1.5 4.875", className: "stroke-linejoin-round" })
  ),
  "bug": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M12 5.71a4 4 0 0 0-8 0v4a4 4 0 1 0 8 0v-4ZM15 8.71h-3M4 8.71H1M12 6H4M15 3.63l-3 2.08M15 13.78l-3-2.07M1 3.63l3 2.08M1 13.78l3-2.07" })
  ),
  "calendar": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 2H2v12h12V2Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M4 6V4h2v2H4ZM7 6V4h2v2H7ZM10 6V4h2v2h-2ZM4 9V7h2v2H4ZM7 9V7h2v2H7ZM4 12v-2h2v2H4ZM7 12v-2h2v2H7ZM10 9V7h2v2h-2Z", className: "filled no-stroke" })
  ),
  "call": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13.99 7.083c0-2.76-2.24-5-5-5M11.07 10.002c-.6.58-1.55.61-2.14.02l-2.88-2.88a1.49 1.49 0 0 1 0-2.12c.52-.52.52-1.36 0-1.88l-.85-.85a.996.996 0 0 0-1.41 0l-.38.38a4.83 4.83 0 0 0 0 6.82l3.17 3.17a4.83 4.83 0 0 0 6.82 0l.38-.38a.996.996 0 0 0 0-1.41l-.85-.85c-.51-.51-1.34-.52-1.86-.02Z", className: "stroke-linejoin-round" })
  ),
  "caret-down-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m8 11 4-6H4l4 6Z", className: "filled stroke-linejoin-round" })
  ),
  "caret-down": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m8 11 4-6H4l4 6Z", className: "stroke-linejoin-round" })
  ),
  "caret-left-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m5 8 6 4V4L5 8Z", className: "filled stroke-linejoin-round" })
  ),
  "caret-right-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m11 8-6 4V4l6 4Z", className: "filled stroke-linejoin-round" })
  ),
  "caret-up-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m8 5 4 6H4l4-6Z", className: "filled stroke-linejoin-round" })
  ),
  "caret-up": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m8 5 4 6H4l4-6Z", className: "stroke-linejoin-round" })
  ),
  "check": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m1 9 4 4L15 2", className: "stroke-linejoin-round" })
  ),
  "close": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m2 1.71 12 12M2 13.71l12-12", className: "stroke-linejoin-round" })
  ),
  "closed-caption-unavailable": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 1H1v14h14V1Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M7.51 10H5c-.55 0-.99-.44-.99-.99V7c0-.55.44-.99.99-.99h1.01M13 10h-2.51c-.55 0-.99-.44-.99-.99V7c0-.55.44-.99.99-.99H13M1 1l14 14", className: "stroke-linejoin-round" })
  ),
  "closed-caption": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 1H1v14h14V1Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M7.51 10H5c-.55 0-.99-.44-.99-.99V7c0-.55.44-.99.99-.99h2.51M13 10h-2.51c-.55 0-.99-.44-.99-.99V7c0-.55.44-.99.99-.99H13", className: "stroke-linejoin-round" })
  ),
  "command-prompt": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 1H1v14h14V1ZM12 11H9", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M4.71 11.3 8 8 4.71 4.71", className: "stroke-linejoin-round" })
  ),
  "contact": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 12c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h4v3l4-3h4Z", className: "stroke-linejoin-round" })
  ),
  "copy": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 5H5v10h10V5Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M13 1H1v11", className: "stroke-linejoin-round" })
  ),
  "delete-marker": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M3 7V1h6l4 4v10h-3", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M8 1v5h5M2 15l6-6M2 9.01l6.01 6", className: "stroke-linejoin-round" })
  ),
  "download": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M1 15h14M13 6l-5 5-5-5M8 10V1", className: "stroke-linejoin-round" })
  ),
  "drag-indicator": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "5.5", cy: "2.5", r: "1.5", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "5.5", cy: "13.5", r: "1.5", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "5.5", cy: "8", r: "1.5", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "10.5", cy: "2.5", r: "1.5", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "10.5", cy: "13.5", r: "1.5", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "10.5", cy: "8", r: "1.5", className: "filled no-stroke" })
  ),
  "edit": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m6.19 13.275-4.19.7.7-4.19 7.2-7.2c.78-.78 2.05-.78 2.83 0l.66.66c.78.78.78 2.05 0 2.83l-7.2 7.2ZM9 3.995l3 3", className: "stroke-linejoin-round" })
  ),
  "ellipsis": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "2.5", r: "1.5", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "8", cy: "13.5", r: "1.5", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "1.5", className: "filled no-stroke" })
  ),
  "envelope": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m1 3 7 6 7-6", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M15 3H1v10h14V3Z", className: "stroke-linejoin-round" })
  ),
  "exit-full-screen": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M1 10.01h5V15M10 15v-5h5M6 1v5H1M15 6h-5V1", className: "stroke-linejoin-round" })
  ),
  "expand": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 7V2H9M10 6l4-4M6.99 14H2V9M6 10l-4 4M9 14h5V9M10 10l4 4M2 6.99V2h5M6 6 2 2", className: "stroke-linejoin-round" })
  ),
  "external": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 8.01v-6H8M14.02 2 8 8.01M6 2.01H2v12h12v-3.99", className: "stroke-linejoin-round" })
  ),
  "face-happy-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M7.995 1.103a6.887 6.887 0 0 0-6.892 6.892 6.887 6.887 0 0 0 6.892 6.892 6.887 6.887 0 0 0 6.892-6.892 6.887 6.887 0 0 0-6.892-6.892Zm-2.002 7.61A2.148 2.148 0 0 0 8 10.134c.914 0 1.706-.592 2.007-1.423l1.646.596c-.54 1.489-1.966 2.577-3.653 2.577-1.686 0-3.114-1.088-3.653-2.577l1.646-.596ZM7.148 6.03a1.125 1.125 0 1 1-2.25 0 1.125 1.125 0 0 1 2.25 0Zm3.95 0a1.125 1.125 0 1 1-2.25 0 1.125 1.125 0 0 1 2.25 0Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M8 .5A7.495 7.495 0 0 0 .5 8c0 4.146 3.354 7.5 7.5 7.5s7.5-3.354 7.5-7.5S12.146.5 8 .5Zm0 1.559c3.61 0 6.008 2.566 6.008 5.941 0 2.404-2.044 6.014-6.008 6.014-3.818 0-6.01-2.9-6.01-6.014 0-2.603 1.712-5.941 6.01-5.941Z", className: "filled no-stroke" })
  ),
  "face-happy": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M6 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM10.01 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M10.83 9.01c-.42 1.16-1.53 2-2.83 2s-2.41-.84-2.83-2", className: "stroke-linejoin-round" })
  ),
  "face-neutral-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M7.995 1.103a6.887 6.887 0 0 0-6.892 6.892 6.887 6.887 0 0 0 6.892 6.892 6.887 6.887 0 0 0 6.892-6.892 6.887 6.887 0 0 0-6.892-6.892ZM11 10.875H5v-1.75h6v1.75ZM7.148 6.03a1.125 1.125 0 1 1-2.25 0 1.125 1.125 0 0 1 2.25 0Zm3.95 0a1.125 1.125 0 1 1-2.25 0 1.125 1.125 0 0 1 2.25 0Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M8 .5A7.495 7.495 0 0 0 .5 8c0 4.146 3.354 7.5 7.5 7.5s7.5-3.354 7.5-7.5S12.146.5 8 .5Zm0 1.559c3.61 0 6.008 2.566 6.008 5.941 0 2.404-2.044 6.014-6.008 6.014-3.818 0-6.01-2.9-6.01-6.014 0-2.603 1.712-5.941 6.01-5.941Z", className: "filled no-stroke" })
  ),
  "face-neutral": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M6 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM10.01 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M5 10h6", className: "stroke-linejoin-round" })
  ),
  "face-sad-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M7.995 1.103a6.887 6.887 0 0 0-6.892 6.892 6.887 6.887 0 0 0 6.892 6.892 6.887 6.887 0 0 0 6.892-6.892 6.887 6.887 0 0 0-6.892-6.892Zm-3.648 9.6C4.887 9.212 6.314 8.124 8 8.124c1.687 0 3.114 1.088 3.653 2.577l-1.646.596A2.148 2.148 0 0 0 8 9.875c-.913 0-1.706.592-2.007 1.423l-1.646-.596ZM7.148 6.03a1.125 1.125 0 1 1-2.25 0 1.125 1.125 0 0 1 2.25 0Zm3.95 0a1.125 1.125 0 1 1-2.25 0 1.125 1.125 0 0 1 2.25 0Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M8 .5A7.495 7.495 0 0 0 .5 8c0 4.146 3.354 7.5 7.5 7.5s7.5-3.354 7.5-7.5S12.146.5 8 .5Zm0 1.559c3.61 0 6.008 2.566 6.008 5.941 0 2.404-2.044 6.014-6.008 6.014-3.818 0-6.01-2.9-6.01-6.014 0-2.603 1.712-5.941 6.01-5.941Z", className: "filled no-stroke" })
  ),
  "face-sad": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M6 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM10.01 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M10.83 11C10.41 9.84 9.3 9 8 9s-2.41.84-2.83 2", className: "stroke-linejoin-round" })
  ),
  "file-open": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13 15H3V1h6l4 4v10Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M8 1v5h5M3 8l7 7", className: "stroke-linejoin-round" })
  ),
  "file": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13 15H3V1h6l4 4v10Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M8 1v5h5", className: "stroke-linejoin-round" })
  ),
  "filter": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m1 3 5 5v7l4-2V8l5-5V1H1v2Z", className: "stroke-linejoin-round" })
  ),
  "flag": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M1.99 16V1M2 2.14c4 2.71 8-2.99 12-.28v7.28c-4-2.89-8 2.61-12-.28", className: "stroke-linejoin-round" })
  ),
  "folder-open": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6 14h8l-3-7H1l2 7h3Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M2 7V2h6l1 2h5c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1h-1", className: "stroke-linejoin-round" })
  ),
  "folder": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 5v9H2V2h6l1 2h5c.55 0 1 .45 1 1Z", className: "stroke-linejoin-round" })
  ),
  "forward-10-seconds": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13.95 14.01h-.96c-.56 0-1.02-.46-1.02-1.02v-2.96c0-.56.45-1.01 1.01-1.02h.96c.56 0 1.02.45 1.02 1.02v2.96c0 .56-.46 1.02-1.02 1.02h.01Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M9 9v5", className: "stroke-linecap-square" }),
    import_react2.default.createElement("path", { d: "M15 0v5h-5", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M6.024 15A7.154 7.154 0 0 1 1 8.164C1 4.204 4.196 1 8.148 1A7.148 7.148 0 0 1 14.5 4.875", className: "stroke-linejoin-round" })
  ),
  "full-screen": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6 15H1v-5M15 10v5h-5M1 6V1h5M10 1h5v5", className: "stroke-linejoin-round" })
  ),
  "gen-ai": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6.15 10.365 8 15.005l1.86-4.64 4.64-1.86-4.64-1.85L8 2.005l-1.85 4.65-4.65 1.85 4.65 1.86Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M2.38 4.915c.02.05.07.08.12.08.05 0 .12-.08.12-.08l.66-1.64 1.64-.66a.13.13 0 0 0 .08-.12c0-.05-.08-.12-.08-.12l-1.64-.66-.66-1.64c-.04-.1-.2-.1-.24 0l-.66 1.64-1.64.66a.13.13 0 0 0-.08.12c0 .05.08.12.08.12l1.64.66.66 1.64Z", className: "filled no-stroke" })
  ),
  "globe": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M8 15c1.657 0 3-3.134 3-7S9.657 1 8 1 5 4.134 5 8s1.343 7 3 7ZM1 8h14", className: "stroke-linejoin-round" })
  ),
  "grid-view": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6 10H2v4h4v-4ZM14 10h-4v4h4v-4ZM6 2H2v4h4V2ZM14 2h-4v4h4V2Z", className: "stroke-linejoin-round" })
  ),
  "group-active": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "11", cy: "7", r: "3", className: "filled no-stroke" }),
    import_react2.default.createElement("circle", { cx: "4.25", cy: "4.25", r: "2.75", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M6 14a3 3 0 0 1 3-3h4a3 3 0 0 1 3 3v2H6v-2Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M7.126 8H3a3 3 0 0 0-3 3v3h5a4 4 0 0 1 3.405-3.956A4 4 0 0 1 7.126 8Z", className: "filled no-stroke" })
  ),
  "group": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 16v-2a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v2" }),
    import_react2.default.createElement("circle", { cx: "11.25", cy: "6.75", r: "2.25" }),
    import_react2.default.createElement("path", { d: "M6.254 8.99H3a2.005 2.005 0 0 0-2.005 2.005v2h.01v-2C1.005 9.893 1.898 9 3 9h3.261a8.678 8.678 0 0 1-.007-.01Z", className: "filled" }),
    import_react2.default.createElement("circle", { cx: "4.25", cy: "4.25", r: "2.25" })
  ),
  "heart-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13.49 3.546C12.124 2.31 10.312 2.689 9 4L8 5 7 4c-1.301-1.302-3.114-1.69-4.491-.454a3.409 3.409 0 0 0-.133 4.95L7.952 14s.067.028.086 0l5.576-5.505a3.409 3.409 0 0 0-.133-4.95h.01Z", className: "filled stroke-linejoin-round" })
  ),
  "heart": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13.752 2.873c-1.44-1.3-3.7-1.1-5.08.28l-.7.7-.7-.7c-1.37-1.37-3.63-1.58-5.08-.28a3.588 3.588 0 0 0-.14 5.21l5.87 5.87s.07.03.09 0l5.87-5.87a3.588 3.588 0 0 0-.14-5.21h.01Z", className: "stroke-linejoin-round" })
  ),
  "insert-row": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6 11H1V2h14v4M12 7v8M8 11h8", className: "stroke-linejoin-round" })
  ),
  "key": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M10 1a5.002 5.002 0 0 0-4.6 6.96L1 12.36v2.65h4v-2h3v-2.42c.61.27 1.29.42 2 .42 2.76 0 5-2.24 5-5s-2.24-5-5-5V1Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M10.5 7a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z", className: "filled no-stroke" })
  ),
  "keyboard": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 2H1v12h14V2ZM4 11h8M4 8h2M4 5h2M7 8h2M7 5h2M10 8h2M10 5h2" })
  ),
  "list-view": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M5 3h10M5 8h10M5 13h10" }),
    import_react2.default.createElement("path", { d: "M2.01 3.01H2V3h.01v.01ZM2.01 8.01H2V8h.01v.01ZM2.01 13.01H2V13h.01v.01Z", className: "filled" })
  ),
  "location-pin": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M12.01 9c.63-.83 1-1.87 1-3 0-2.76-2.24-5-5-5a5.002 5.002 0 0 0-4 8l4 6 4-6Z", className: "stroke-linejoin-round" })
  ),
  "lock-private": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M12 7H4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1ZM5 7V4c0-1.65 1.35-3 3-3s3 1.35 3 3v3", className: "stroke-linejoin-round" })
  ),
  "map": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M2 12.8V2l3.61 1.21V14L2 12.8ZM10.4 12.8V2L14 3.05V14l-3.6-1.2ZM5.61 14l4.79-1.2M5.61 3.21 10.4 2", className: "stroke-linejoin-round" })
  ),
  "menu": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 3H1M15 8H1M15 13H1", className: "stroke-linejoin-round" })
  ),
  "microphone-off": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M3 15.01h10M8 15v-3" }),
    import_react2.default.createElement("path", { d: "M6.6 8.43c.36.36.86.59 1.41.59 1.1 0 2-.9 2-2v-2L6.6 8.43Z", className: "filled" }),
    import_react2.default.createElement("path", { d: "M13 7.01c0 2.76-2.24 5-5 5-1.28 0-2.45-.48-3.33-1.28M3 12.01l10-10" }),
    import_react2.default.createElement("path", { d: "M8.01 1.01c-1.1 0-2 .9-2 2v1.67l3.23-3.23c-.34-.27-.77-.44-1.23-.44Z", className: "filled" }),
    import_react2.default.createElement("path", { d: "M3.01 7.01c0 .482-.162 1.263.33 1.75" })
  ),
  "microphone": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M3 15h10M8 15v-3M10 3a2 2 0 1 0-4 0v4a2 2 0 1 0 4 0V3Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M13 7c0 2.76-2.24 5-5 5S3 9.76 3 7", className: "stroke-linejoin-round" })
  ),
  "mini-player": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 10.01H8v4h6v-4Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M5 14H2V2h12v5", className: "stroke-linejoin-round" })
  ),
  "multiscreen": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 5H5v7h10V5Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M11 3V1.01L1.01 1 1 8h1.998M10 12v3M7 15h6", className: "stroke-linejoin-round" })
  ),
  "notification": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 12H2c-.39 0-.63-.44-.41-.76L4 8V5c0-2.21 1.79-4 4-4s4 1.79 4 4v3l2.41 3.24c.22.33-.02.76-.41.76ZM6 13c0 1.1.9 2 2 2s2-.9 2-2", className: "stroke-linejoin-round" })
  ),
  "pause": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M5 2v12M11 2v12", className: "stroke-linejoin-round" })
  ),
  "play": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m4 13.03 8-5-8-5v10Z", className: "stroke-linejoin-round filled" })
  ),
  "redo": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m11 2 4 4-4 4", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M14 6H5.5C3.01 6 1 8.01 1 10.5S3.01 15 5.5 15H8", className: "stroke-linejoin-round" })
  ),
  "refresh": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 0v5l-5-.04", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M15 8c0 3.87-3.13 7-7 7s-7-3.13-7-7 3.13-7 7-7c2.79 0 5.2 1.63 6.33 4" })
  ),
  "remove": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M1 5h14M13 5l-1 10H4L3 5M5 5V2h6v3", className: "stroke-linejoin-round" })
  ),
  "resize-area": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 4 4 14M10 14l4-4", className: "stroke-linejoin-round" })
  ),
  "script": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M5 4 1 8l4 4M11 4l4 4-4 4", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M7 13 9 3" })
  ),
  "search": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m11 11 4 4M7 12A5 5 0 1 0 7 2a5 5 0 0 0 0 10Z", className: "stroke-linejoin-round" })
  ),
  "security": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8 1C6.29 2.53 4.13 3.32 2 3.48v3.48c0 2.05.76 3.88 1.71 5.14.92 1.22 2.32 2.21 4.29 2.9 1.97-.69 3.37-1.68 4.29-2.9A8.684 8.684 0 0 0 14 6.96V3.48C11.87 3.32 9.71 2.52 8 1Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M8 4v5M8 10v2" })
  ),
  "send": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m1 1 14 6.92L1 15l3-7-3-7ZM4 8h11", className: "stroke-linejoin-round" })
  ),
  "settings": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M6.11 1.729c.07-.42.44-.729.86-.729h2.02c.43 0 .79.31.86.729l.17.999c.05.29.24.529.5.679.06.03.11.06.17.1.25.15.56.2.84.1l.95-.35c.4-.15.85 0 1.07.38l1.01 1.747c.21.37.13.839-.2 1.108l-.78.64c-.23.189-.34.479-.33.768v.2c0 .29.11.579.33.769l.78.639c.33.27.42.739.2 1.108l-1.01 1.748c-.21.37-.66.529-1.06.38l-.95-.35a.966.966 0 0 0-.84.1c-.06.03-.11.07-.17.1-.26.14-.45.389-.5.679l-.17.998A.878.878 0 0 1 9 15H6.98a.87.87 0 0 1-.86-.729l-.17-.998a.988.988 0 0 0-.5-.68c-.06-.03-.11-.06-.17-.1a.996.996 0 0 0-.84-.1l-.95.35c-.4.15-.85 0-1.06-.38l-1.01-1.747a.873.873 0 0 1 .2-1.108l.78-.64c.23-.189.34-.479.33-.768v-.2c0-.3-.11-.579-.33-.769l-.78-.639a.861.861 0 0 1-.2-1.108l1.01-1.748c.21-.37.66-.529 1.07-.38l.95.35c.28.1.58.06.84-.1.06-.03.11-.07.17-.1.26-.14.45-.379.5-.678l.15-1Z", className: "stroke-linecap-round stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M10 8c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2Z", className: "stroke-linecap-round stroke-linejoin-round" })
  ),
  "share": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M3.5 11a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5ZM12.5 6a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5ZM12.5 15a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5ZM10.326 4.7 5.678 7.293M10.223 11.483l-4.448-1.96" })
  ),
  "shrink": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M10 1v5h5M10.71 5.29 15 1M1 10h5v5M5.3 10.7 1 15", className: "stroke-linejoin-round" })
  ),
  "star-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m8 1 2.16 4.38 4.84.71-3.5 3.41.83 4.81L8 12.04l-4.33 2.27.83-4.81L1 6.09l4.84-.71L8 1Z", className: "filled stroke-linejoin-round" })
  ),
  "star-half": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8 1v11.04l-4.33 2.27.83-4.81L1 6.09l4.84-.71L8 1Z", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "m8 1 2.16 4.38 4.84.71-3.5 3.41.83 4.81L8 12.04l-4.33 2.27.83-4.81L1 6.09l4.84-.71L8 1Z", className: "stroke-linejoin-round" })
  ),
  "star": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m8 1 2.16 4.38 4.84.71-3.5 3.41.83 4.81L8 12.04l-4.33 2.27.83-4.81L1 6.09l4.84-.71L8 1Z", className: "stroke-linejoin-round" })
  ),
  "status-in-progress": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M9 7H7v2h2V7ZM6 7H4v2h2V7ZM12 7h-2v2h2V7Z", className: "filled no-stroke" })
  ),
  "status-info": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M8 12V7M8 6V4" })
  ),
  "status-negative": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "m5.5 5.5 5 5M10.5 5.5l-5 5" })
  ),
  "status-pending": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M8 4v5H4", className: "stroke-linejoin-round" })
  ),
  "status-positive": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M4.5 7.5 7 10l4-5", className: "stroke-linejoin-round" })
  ),
  "status-stopped": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M5 8h6" })
  ),
  "status-warning": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8 5v4M8 10v2M6.52 1.88l-5.33 9.76c-.13.23-.19.5-.19.76 0 .88.71 1.59 1.59 1.59H13.4c.88 0 1.59-.71 1.59-1.59 0-.27-.07-.53-.19-.76L9.48 1.88C9.18 1.34 8.62 1 8 1s-1.18.34-1.48.88Z", className: "stroke-linejoin-round" })
  ),
  "subtract-minus": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M2 8h12", className: "stroke-linejoin-round" })
  ),
  "suggestions": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8.12 15h-2l-.99-5.02C3.92 9.07 3.12 7.63 3.12 6c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.07-2.01 3.98L10.12 15h-2ZM11.12 12h-6", className: "stroke-linejoin-round" })
  ),
  "support": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "8", r: "7" }),
    import_react2.default.createElement("path", { d: "M5.75 6.338c.13-1.178.811-2.339 2.37-2.339 1.472 0 2.435 1.312 2.042 2.468-.215.633-.916 1.132-1.385 1.578C8.162 8.631 8 9.2 8 10" }),
    import_react2.default.createElement("path", { d: "M8 12.01h.01V12H8v.01Z", className: "filled" })
  ),
  "thumbs-down-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M1 1h2.01v9H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1Zm14.14 6.22-1.69-5.03C13.21 1.48 12.54 1 11.79 1H4.01v9l3.23 3.88c.6.72 1.77.29 1.77-.64V9h4.86c.92 0 1.57-.91 1.28-1.78h-.01Z", className: "filled no-stroke" })
  ),
  "thumbs-down": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M9 13.13V9h4.12c.6 0 1.02-.59.83-1.16l-1.6-4.77A1.58 1.58 0 0 0 10.86 2H1v8h4l2.41 3.61c.48.72 1.59.38 1.59-.48ZM5 2v8", className: "stroke-linejoin-round" })
  ),
  "thumbs-up-filled": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M3 15.001H1c-.55 0-1-.45-1-1v-7c0-.55.45-1 1-1h2v9Zm10.86-8H9v-4.24c0-.93-1.17-1.36-1.77-.64L4 6.001v9h7.78c.75 0 1.42-.48 1.66-1.19l1.69-5.03c.29-.87-.36-1.78-1.28-1.78h.01Z", className: "filled no-stroke" })
  ),
  "thumbs-up": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M9 2.871v4.13h4.12c.6 0 1.02.59.83 1.16l-1.6 4.77a1.58 1.58 0 0 1-1.49 1.07H1v-8h4l2.41-3.61c.48-.72 1.59-.38 1.59.48ZM5 14.001v-8", className: "stroke-linejoin-round" })
  ),
  "ticket": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M13 8c0-1.1.9-2 2-2V3H1v3c1.1 0 2 .9 2 2s-.9 2-2 2v3h14v-3c-1.1 0-2-.9-2-2Z", className: "stroke-linejoin-round" })
  ),
  "transcript": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 1H1v14h14V1ZM9 10H4M12 6H4", className: "stroke-linejoin-round" })
  ),
  "treeview-collapse": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 2H2v12h12V2ZM5 8h6", className: "stroke-linejoin-round" })
  ),
  "treeview-expand": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M14 2H2v12h12V2ZM8 5v6M5 8h6", className: "stroke-linejoin-round" })
  ),
  "undo": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M5 2 1 6l4 4", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M2 6h8.5c2.49 0 4.5 2.01 4.5 4.5S12.99 15 10.5 15H8", className: "stroke-linejoin-round" })
  ),
  "unlocked": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M11 7H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1ZM9 7V4c0-1.65 1.35-3 3-3s3 1.35 3 3", className: "stroke-linejoin-round" })
  ),
  "upload-download": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m7 7-3 3-3-3M4 9V1M15 9l-3-3-3 3M12 7v8M0 14h8M8 2h8", className: "stroke-linejoin-round" })
  ),
  "upload": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M1 1h14M13 10 8 5l-5 5M8 6v9", className: "stroke-linejoin-round" })
  ),
  "user-profile-active": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8 6a2.5 2.5 0 0 0 0-5 2.5 2.5 0 0 0 0 5ZM2 15.5v-3c0-1.66 1.34-3 3-3h6c1.66 0 3 1.34 3 3v3", className: "filled" }),
    import_react2.default.createElement("path", { d: "M2 15.5v-3c0-1.66 1.34-3 3-3h6c1.66 0 3 1.34 3 3v3", className: "stroke-linejoin-round" })
  ),
  "user-profile": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M8 7c1.66 0 3-1.34 3-3S9.66 1 8 1 5 2.34 5 4s1.34 3 3 3Z" }),
    import_react2.default.createElement("path", { d: "M2 16v-3c0-1.66 1.34-3 3-3h6c1.66 0 3 1.34 3 3v3", className: "stroke-linejoin-round" })
  ),
  "video-camera-off": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M11 6V3H1v9.97h10V9.98L15 13V3.04L11 6ZM4 6l4 4M8 6.01 4 10", className: "stroke-linejoin-round" })
  ),
  "video-camera-on": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M11 6V3H1v9.97L11 13v-3l4 3V3.04L11 6Z", className: "stroke-linejoin-round" })
  ),
  "video-camera-unavailable": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M11 5.99V3H1v9.97h10V9.98L15 13V3.04l-4 2.95ZM4 8h4", className: "stroke-linejoin-round" })
  ),
  "video-off": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "7", r: "5" }),
    import_react2.default.createElement("path", { d: "M3 15h10M8 15v-3M6.01 5.01 10 9M10 5 6 9", className: "stroke-linejoin-round" })
  ),
  "video-on": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "7", r: "5" }),
    import_react2.default.createElement("circle", { cx: "8", cy: "7", r: "2", className: "filled no-stroke" }),
    import_react2.default.createElement("path", { d: "M3 15h10M8 15v-3" })
  ),
  "video-unavailable": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "8", cy: "7", r: "5" }),
    import_react2.default.createElement("path", { d: "M3 15h10M6 7h4M8 15v-3" })
  ),
  "view-full": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 1H1v14h14V1Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M11.5 4h-7a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5Z", className: "filled no-stroke" })
  ),
  "view-horizontal": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 15V1H1v14h14Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M11.5 7h-7a.5.5 0 0 0-.5.5v4a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 0-.5-.5Z", className: "filled no-stroke" })
  ),
  "view-vertical": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M15 1H1v14h14V1Z", className: "stroke-linejoin-round" }),
    import_react2.default.createElement("path", { d: "M11.5 4h-4a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5Z", className: "filled no-stroke" })
  ),
  "zoom-in": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { cx: "7", cy: "7", r: "6" }),
    import_react2.default.createElement("path", { d: "m11 11 4 4M7 4v6M4 7l6 .01" })
  ),
  "zoom-out": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "m11 11 4 4" }),
    import_react2.default.createElement("circle", { cx: "7", cy: "7", r: "6" }),
    import_react2.default.createElement("path", { d: "m4 7 6 .01" })
  ),
  "zoom-to-fit": import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("path", { d: "M11 5H5v6h6V5ZM6 1H1v5M10 1h5v5M6 15H1v-5M10 15h5v-5", className: "stroke-linejoin-round" })
  )
};
var icons_default = icons;

// node_modules/@cloudscape-design/components/icon/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/icon/styles.scoped.css";
var styles_css_default = {
  "icon": "awsui_icon_h11ix_6vdye_189",
  "icon-flex-height": "awsui_icon-flex-height_h11ix_6vdye_197",
  "size-small": "awsui_size-small_h11ix_6vdye_225",
  "size-small-mapped-height": "awsui_size-small-mapped-height_h11ix_6vdye_229",
  "size-normal": "awsui_size-normal_h11ix_6vdye_244",
  "size-normal-mapped-height": "awsui_size-normal-mapped-height_h11ix_6vdye_248",
  "size-medium": "awsui_size-medium_h11ix_6vdye_263",
  "size-medium-mapped-height": "awsui_size-medium-mapped-height_h11ix_6vdye_267",
  "size-big": "awsui_size-big_h11ix_6vdye_282",
  "size-big-mapped-height": "awsui_size-big-mapped-height_h11ix_6vdye_286",
  "size-large": "awsui_size-large_h11ix_6vdye_301",
  "size-large-mapped-height": "awsui_size-large-mapped-height_h11ix_6vdye_305",
  "variant-normal": "awsui_variant-normal_h11ix_6vdye_320",
  "variant-disabled": "awsui_variant-disabled_h11ix_6vdye_323",
  "variant-inverted": "awsui_variant-inverted_h11ix_6vdye_326",
  "variant-subtle": "awsui_variant-subtle_h11ix_6vdye_329",
  "variant-warning": "awsui_variant-warning_h11ix_6vdye_332",
  "variant-error": "awsui_variant-error_h11ix_6vdye_335",
  "variant-success": "awsui_variant-success_h11ix_6vdye_338",
  "variant-link": "awsui_variant-link_h11ix_6vdye_341",
  "name-angle-left-double": "awsui_name-angle-left-double_h11ix_6vdye_344",
  "name-angle-left": "awsui_name-angle-left_h11ix_6vdye_344",
  "name-angle-right-double": "awsui_name-angle-right-double_h11ix_6vdye_346",
  "name-angle-right": "awsui_name-angle-right_h11ix_6vdye_346",
  "name-arrow-left": "awsui_name-arrow-left_h11ix_6vdye_348",
  "name-arrow-right": "awsui_name-arrow-right_h11ix_6vdye_349",
  "name-caret-left-filled": "awsui_name-caret-left-filled_h11ix_6vdye_350",
  "name-caret-right-filled": "awsui_name-caret-right-filled_h11ix_6vdye_351",
  "name-audio-full": "awsui_name-audio-full_h11ix_6vdye_352",
  "name-audio-half": "awsui_name-audio-half_h11ix_6vdye_353",
  "name-audio-off": "awsui_name-audio-off_h11ix_6vdye_354",
  "name-external": "awsui_name-external_h11ix_6vdye_355",
  "name-redo": "awsui_name-redo_h11ix_6vdye_356",
  "name-resize-area": "awsui_name-resize-area_h11ix_6vdye_357",
  "name-send": "awsui_name-send_h11ix_6vdye_358",
  "name-shrink": "awsui_name-shrink_h11ix_6vdye_359",
  "name-undo": "awsui_name-undo_h11ix_6vdye_360",
  "name-view-vertical": "awsui_name-view-vertical_h11ix_6vdye_361",
  "badge": "awsui_badge_h11ix_6vdye_385"
};

// node_modules/@cloudscape-design/components/icon/internal.js
function iconSizeMap(height) {
  if (height === null) {
    return "normal";
  }
  if (height >= 50) {
    return "large";
  } else if (height >= 36) {
    return "big";
  } else if (height >= 24) {
    return "medium";
  } else if (height <= 16) {
    return "small";
  } else {
    return "normal";
  }
}
var InternalIcon = (_a) => {
  var { name, size = "normal", variant = "normal", url, alt, ariaLabel, svg, badge, __internalRootRef = null } = _a, props = __rest(_a, ["name", "size", "variant", "url", "alt", "ariaLabel", "svg", "badge", "__internalRootRef"]);
  const iconRef = (0, import_react3.useRef)(null);
  useVisualRefresh();
  const [parentHeight, setParentHeight] = (0, import_react3.useState)(null);
  const contextualSize = size === "inherit";
  const iconSize = contextualSize ? iconSizeMap(parentHeight) : size;
  const inlineStyles = contextualSize && parentHeight !== null ? { height: `${parentHeight}px` } : {};
  const baseProps = getBaseProps(props);
  baseProps.className = clsx_m_default(baseProps.className, styles_css_default.icon, contextualSize && styles_css_default["icon-flex-height"], badge && styles_css_default.badge, !contextualSize && styles_css_default[`size-${iconSize}-mapped-height`], styles_css_default[`size-${iconSize}`], styles_css_default[`variant-${variant}`], styles_css_default[`name-${name}`]);
  (0, import_react3.useLayoutEffect)(() => {
    if (!contextualSize || !iconRef.current) {
      return;
    }
    const { lineHeight } = getComputedStyle(iconRef.current);
    const newParentHeight = parseInt(lineHeight, 10);
    setParentHeight(newParentHeight);
  });
  const mergedRef = useMergeRefs(iconRef, __internalRootRef);
  const hasAriaLabel = typeof ariaLabel === "string";
  const labelAttributes = hasAriaLabel ? { role: "img", "aria-label": ariaLabel } : {};
  if (svg) {
    if (url) {
      warnOnce("Icon", "You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.");
    }
    return import_react3.default.createElement("span", Object.assign({}, baseProps, labelAttributes, { ref: mergedRef, "aria-hidden": !hasAriaLabel, style: inlineStyles }), svg);
  }
  if (url) {
    return import_react3.default.createElement(
      "span",
      Object.assign({}, baseProps, { ref: mergedRef, style: inlineStyles }),
      import_react3.default.createElement("img", { src: url, alt: ariaLabel !== null && ariaLabel !== void 0 ? ariaLabel : alt })
    );
  }
  const validIcon = name && Object.prototype.hasOwnProperty.call(icons_default, name);
  function iconMap(name2) {
    if (name2 === "gen-ai" && iconSize === "small") {
      return import_react3.default.createElement(
        "svg",
        { width: "12", height: "12", viewBox: "0 0 16 16", xmlns: "http://www.w3.org/2000/svg", focusable: "false", "aria-hidden": "true", "data-testid": "gen-ai-filled" },
        import_react3.default.createElement("path", { d: "m8 4.4 1.018 2.582L11.6 8 9.018 9.018 8 11.6 6.982 9.018 4.4 8l2.582-1.018L8 4.4ZM2.405 2.41l.002-.003.003-.002-.003-.002-.002-.003-.002.003-.003.002.003.002.002.003Z", className: "filled" })
      );
    } else {
      return icons_default[name2];
    }
  }
  return import_react3.default.createElement("span", Object.assign({}, baseProps, labelAttributes, { ref: mergedRef, style: inlineStyles }), validIcon ? iconMap(name) : void 0);
};
var internal_default = InternalIcon;

// node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
var import_react5 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/tab-trap/index.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/tab-trap/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/internal/components/tab-trap/styles.scoped.css";
var styles_css_default2 = {
  "root": "awsui_root_oip5a_160mh_5"
};

// node_modules/@cloudscape-design/components/internal/components/tab-trap/index.js
function TabTrap({ focusNextCallback, disabled = false }) {
  return import_react4.default.createElement("div", { className: styles_css_default2.root, tabIndex: disabled ? -1 : 0, onFocus: focusNextCallback });
}

// node_modules/@cloudscape-design/components/internal/components/focus-lock/utils.js
var tabbables = [
  "button:enabled",
  "select:enabled",
  "textarea:enabled",
  "input:enabled",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[tabindex]",
  "[contenteditable]",
  "[autofocus]"
].join(",");
function isFocusable(element) {
  return element.matches(tabbables);
}
function getAllFocusables(container) {
  return Array.prototype.slice.call(container.querySelectorAll(tabbables));
}
function getFocusables(container) {
  return getAllFocusables(container).filter((element) => element.tabIndex !== -1);
}
function getFirstFocusable(container) {
  var _a;
  const focusables = getFocusables(container);
  return (_a = focusables[0]) !== null && _a !== void 0 ? _a : null;
}
function getLastFocusable(container) {
  var _a;
  const focusables = getFocusables(container);
  return (_a = focusables[focusables.length - 1]) !== null && _a !== void 0 ? _a : null;
}

// node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
function FocusLock({ className, disabled, autoFocus, restoreFocus, children }, ref) {
  const returnFocusToRef = (0, import_react5.useRef)(null);
  const containerRef = (0, import_react5.useRef)(null);
  const focusFirst = () => {
    var _a;
    if (containerRef.current) {
      (_a = getFirstFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
    }
  };
  const focusLast = () => {
    var _a;
    if (containerRef.current) {
      (_a = getLastFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
    }
  };
  (0, import_react5.useEffect)(() => {
    if (autoFocus && !disabled) {
      returnFocusToRef.current = document.activeElement;
      focusFirst();
    }
  }, [autoFocus, disabled]);
  const [previouslyDisabled, setPreviouslyDisabled] = (0, import_react5.useState)(!!disabled);
  (0, import_react5.useEffect)(() => {
    var _a;
    if (previouslyDisabled !== !!disabled) {
      setPreviouslyDisabled(!!disabled);
      if (restoreFocus && disabled) {
        (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        returnFocusToRef.current = null;
      }
    }
  }, [previouslyDisabled, disabled, restoreFocus]);
  const restoreFocusHandler = (0, import_react5.useCallback)((elem) => {
    var _a;
    if (elem === null && restoreFocus) {
      (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      returnFocusToRef.current = null;
    }
  }, [restoreFocus]);
  (0, import_react5.useImperativeHandle)(ref, () => ({ focusFirst }));
  const mergedRef = useMergeRefs(containerRef, restoreFocusHandler);
  return import_react5.default.createElement(
    import_react5.default.Fragment,
    null,
    import_react5.default.createElement(TabTrap, { disabled, focusNextCallback: focusLast }),
    import_react5.default.createElement("div", { className, ref: mergedRef }, children),
    import_react5.default.createElement(TabTrap, { disabled, focusNextCallback: focusFirst })
  );
}
var focus_lock_default = import_react5.default.forwardRef(FocusLock);

// node_modules/@cloudscape-design/components/internal/keycode.js
var KeyCode;
(function(KeyCode2) {
  KeyCode2[KeyCode2["pageUp"] = 33] = "pageUp";
  KeyCode2[KeyCode2["pageDown"] = 34] = "pageDown";
  KeyCode2[KeyCode2["end"] = 35] = "end";
  KeyCode2[KeyCode2["home"] = 36] = "home";
  KeyCode2[KeyCode2["backspace"] = 8] = "backspace";
  KeyCode2[KeyCode2["space"] = 32] = "space";
  KeyCode2[KeyCode2["down"] = 40] = "down";
  KeyCode2[KeyCode2["left"] = 37] = "left";
  KeyCode2[KeyCode2["right"] = 39] = "right";
  KeyCode2[KeyCode2["up"] = 38] = "up";
  KeyCode2[KeyCode2["escape"] = 27] = "escape";
  KeyCode2[KeyCode2["enter"] = 13] = "enter";
  KeyCode2[KeyCode2["tab"] = 9] = "tab";
})(KeyCode || (KeyCode = {}));

// node_modules/@cloudscape-design/components/internal/context/button-context.js
var import_react6 = __toESM(require_react());
var ButtonContext = (0, import_react6.createContext)({
  onClick: () => {
  }
});
function useButtonContext() {
  return (0, import_react6.useContext)(ButtonContext);
}

// node_modules/@cloudscape-design/components/internal/events/index.js
var CustomEventStub = class {
  constructor(cancelable = false, detail = null) {
    this.cancelable = cancelable;
    this.detail = detail;
    this.defaultPrevented = false;
    this.cancelBubble = false;
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
};
function createCustomEvent({ cancelable, detail }) {
  return new CustomEventStub(cancelable, detail);
}
function fireNonCancelableEvent(handler, detail) {
  if (!handler) {
    return;
  }
  const event = createCustomEvent({ cancelable: false, detail });
  handler(event);
}
function fireCancelableEvent(handler, detail, sourceEvent) {
  if (!handler) {
    return false;
  }
  const event = createCustomEvent({ cancelable: true, detail });
  handler(event);
  if (event.defaultPrevented && sourceEvent) {
    sourceEvent.preventDefault();
  }
  if (event.cancelBubble && sourceEvent) {
    sourceEvent.stopPropagation();
  }
  return event.defaultPrevented;
}
function fireKeyboardEvent(handler, reactEvent) {
  return fireCancelableEvent(handler, {
    keyCode: reactEvent.keyCode,
    key: reactEvent.key,
    ctrlKey: reactEvent.ctrlKey,
    shiftKey: reactEvent.shiftKey,
    altKey: reactEvent.altKey,
    metaKey: reactEvent.metaKey,
    isComposing: reactEvent.nativeEvent.isComposing
  }, reactEvent);
}
var isMouseEvent = (e) => {
  return e.button !== void 0;
};
function hasModifierKeys(event) {
  return event.ctrlKey || event.altKey || event.shiftKey || event.metaKey;
}
function isPlainLeftClick(event) {
  return event && (!isMouseEvent(event) || event.button === 0) && !hasModifierKeys(event);
}

// node_modules/@cloudscape-design/components/internal/hooks/forward-focus/index.js
var import_react7 = __toESM(require_react());
function useForwardFocus(mainRef, controlRef) {
  (0, import_react7.useImperativeHandle)(mainRef, () => ({
    focus(...args) {
      var _a;
      (_a = controlRef.current) === null || _a === void 0 ? void 0 : _a.focus(...args);
    }
  }), [controlRef]);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-performance-marks/index.js
var import_react10 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/use-dom-attribute/index.js
var import_react8 = __toESM(require_react());
function useDOMAttribute(elementRef, attributeName, value) {
  const attributeValueRef = (0, import_react8.useRef)();
  (0, import_react8.useEffect)(() => {
    var _a;
    attributeValueRef.current = value;
    (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.setAttribute(attributeName, value);
  }, [attributeName, value, elementRef]);
  return {
    [attributeName]: attributeValueRef.current
  };
}

// node_modules/@cloudscape-design/components/internal/hooks/use-effect-on-update.js
var import_react9 = __toESM(require_react());
function useEffectOnUpdate(callback, deps) {
  const isFirstRender = (0, import_react9.useRef)(true);
  (0, import_react9.useEffect)(() => {
    if (isFirstRender.current) {
      isFirstRender.current = false;
    } else {
      return callback();
    }
  }, deps);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-performance-marks/is-in-viewport.js
var map = /* @__PURE__ */ new WeakMap();
var MANUAL_TRIGGER_DELAY = 150;
function isInViewport(element, callback) {
  let resolve = (value) => {
    resolve = () => {
    };
    callback(value);
  };
  map.set(element, (inViewport) => resolve(inViewport));
  observer.observe(element);
  const timeoutHandle = setTimeout(() => resolve(false), MANUAL_TRIGGER_DELAY);
  return () => {
    clearTimeout(timeoutHandle);
    map.delete(element);
    observer.unobserve(element);
  };
}
function createIntersectionObserver(callback) {
  if (typeof IntersectionObserver === "undefined") {
    return {
      observe: () => {
      },
      unobserve: () => {
      }
    };
  }
  return new IntersectionObserver(callback);
}
var observer = createIntersectionObserver(function isInViewportObserver(entries) {
  var _a;
  for (const entry of entries) {
    observer.unobserve(entry.target);
    (_a = map.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry.isIntersecting);
    map.delete(entry.target);
  }
});

// node_modules/@cloudscape-design/components/internal/hooks/use-performance-marks/index.js
var EVALUATE_COMPONENT_VISIBILITY_EVENT = "awsui-evaluate-component-visibility";
var useEvaluateComponentVisibility = () => {
  const [evaluateComponentVisibility, setEvaluateComponentVisibility] = (0, import_react10.useState)(false);
  (0, import_react10.useEffect)(() => {
    const handleEvaluateComponentVisibility = () => {
      setEvaluateComponentVisibility((prev) => !prev);
    };
    document.addEventListener(EVALUATE_COMPONENT_VISIBILITY_EVENT, handleEvaluateComponentVisibility);
    return () => {
      document.removeEventListener(EVALUATE_COMPONENT_VISIBILITY_EVENT, handleEvaluateComponentVisibility);
    };
  }, []);
  return evaluateComponentVisibility;
};
function usePerformanceMarks(name, enabled, elementRef, getDetails, dependencies) {
  const id = useRandomId();
  const { isInModal } = useModalContext();
  const attributes = useDOMAttribute(elementRef, "data-analytics-performance-mark", id);
  const evaluateComponentVisibility = useEvaluateComponentVisibility();
  (0, import_react10.useEffect)(() => {
    if (!enabled() || !elementRef.current || isInModal) {
      return;
    }
    const elementVisible = elementRef.current.offsetWidth > 0 && elementRef.current.offsetHeight > 0 && getComputedStyle(elementRef.current).visibility !== "hidden";
    if (!elementVisible) {
      return;
    }
    const timestamp = performance.now();
    const cleanup = isInViewport(elementRef.current, (inViewport) => {
      performance.mark(`${name}Rendered`, {
        startTime: timestamp,
        detail: Object.assign({ source: "awsui", instanceIdentifier: id, inViewport }, getDetails())
      });
    });
    return cleanup;
  }, []);
  useEffectOnUpdate(() => {
    if (!enabled() || !elementRef.current || isInModal) {
      return;
    }
    const elementVisible = elementRef.current.offsetWidth > 0 && elementRef.current.offsetHeight > 0 && getComputedStyle(elementRef.current).visibility !== "hidden";
    if (!elementVisible) {
      return;
    }
    const timestamp = performance.now();
    const cleanup = isInViewport(elementRef.current, (inViewport) => {
      performance.mark(`${name}Updated`, {
        startTime: timestamp,
        detail: Object.assign({ source: "awsui", instanceIdentifier: id, inViewport }, getDetails())
      });
    });
    return cleanup;
  }, [evaluateComponentVisibility, ...dependencies]);
  return attributes;
}

// node_modules/@cloudscape-design/components/internal/utils/check-safe-url.js
var allowedJavascriptUrls = ["javascript:void(0)", "javascript:void(0);", "javascript:;"];
function checkSafeUrl(component, url) {
  if (!url) {
    return;
  }
  if (allowedJavascriptUrls.indexOf(url.toLowerCase()) !== -1) {
    return;
  }
  let parsedUrl;
  try {
    parsedUrl = new URL(url);
  } catch (e) {
    return;
  }
  if (parsedUrl.protocol === "javascript:") {
    warnOnce(component, `A javascript: URL was blocked as a security precaution. The URL was "${url}".`);
    throw new Error(`A javascript: URL was blocked as a security precaution.`);
  }
  return;
}

// node_modules/@cloudscape-design/components/live-region/internal.js
var import_react11 = __toESM(require_react());

// node_modules/@cloudscape-design/components/live-region/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/live-region/styles.scoped.css";
var styles_css_default3 = {
  "root": "awsui_root_1iee7_xy9l5_145",
  "announcer": "awsui_announcer_1iee7_xy9l5_153"
};

// node_modules/@cloudscape-design/components/live-region/test-classes/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/live-region/test-classes/styles.scoped.css";
var styles_css_default4 = {
  "root": "awsui_root_1pc7b_1k8pp_5",
  "announcer": "awsui_announcer_1pc7b_1k8pp_9"
};

// node_modules/@cloudscape-design/components/live-region/controller.js
var LiveRegionController = class _LiveRegionController {
  constructor(politeness, delay = _LiveRegionController.defaultDelay) {
    this.politeness = politeness;
    this.delay = delay;
    this._addedTerminalPeriod = false;
    this._nextAnnouncement = "";
    this._element = document.createElement("div");
    this._element.className = `${styles_css_default3.announcer} ${styles_css_default4.announcer}`;
    this._element.setAttribute("aria-live", this.politeness);
    this._element.setAttribute("aria-atomic", "true");
    document.body.appendChild(this._element);
  }
  /**
   * Reset the state of the controller and clear any active announcements.
   */
  destroy() {
    var _a;
    (_a = this._element) === null || _a === void 0 ? void 0 : _a.remove();
    if (this._timeoutId !== void 0) {
      clearTimeout(this._timeoutId);
      this._timeoutId = void 0;
    }
  }
  announce({ message, forceReannounce = false }) {
    if (!message) {
      return;
    }
    this._nextAnnouncement = message.trim();
    if (this.delay === 0 || forceReannounce) {
      return this._updateElement(forceReannounce);
    }
    if (this._timeoutId === void 0) {
      this._timeoutId = setTimeout(() => this._updateElement(false), this.delay * 1e3);
    }
  }
  _updateElement(forceReannounce) {
    if (this._nextAnnouncement !== this._lastAnnouncement) {
      this._element.textContent = this._nextAnnouncement;
      this._addedTerminalPeriod = false;
    } else if (forceReannounce) {
      this._element.textContent = this._nextAnnouncement + (this._addedTerminalPeriod ? "" : ".");
      this._addedTerminalPeriod = !this._addedTerminalPeriod;
    }
    this._lastAnnouncement = this._nextAnnouncement;
    this._timeoutId = void 0;
  }
};
LiveRegionController.defaultDelay = 2;

// node_modules/@cloudscape-design/components/live-region/internal.js
var internal_default2 = import_react11.default.forwardRef(function InternalLiveRegion(_a, ref) {
  var { assertive = false, hidden = false, tagName: TagName = "div", delay, sources, children, __internalRootRef, className } = _a, restProps = __rest(_a, ["assertive", "hidden", "tagName", "delay", "sources", "children", "__internalRootRef", "className"]);
  const baseProps = getBaseProps(restProps);
  const childrenRef = (0, import_react11.useRef)(null);
  const mergedRef = useMergeRefs(childrenRef, __internalRootRef);
  (0, import_react11.useEffect)(() => {
    if (childrenRef.current) {
      childrenRef.current.inert = hidden;
    }
  }, [hidden]);
  const liveRegionControllerRef = (0, import_react11.useRef)();
  (0, import_react11.useEffect)(() => {
    const liveRegionController = new LiveRegionController(assertive ? "assertive" : "polite");
    liveRegionControllerRef.current = liveRegionController;
    return () => {
      liveRegionController.destroy();
      liveRegionControllerRef.current = void 0;
    };
  }, [assertive]);
  const getContent = () => {
    if (sources) {
      return getSourceContent(sources);
    }
    if (childrenRef.current) {
      return extractTextContent(childrenRef.current);
    }
  };
  (0, import_react11.useEffect)(() => {
    var _a2;
    (_a2 = liveRegionControllerRef.current) === null || _a2 === void 0 ? void 0 : _a2.announce({ message: getContent(), delay });
  });
  (0, import_react11.useImperativeHandle)(ref, () => ({
    reannounce() {
      var _a2;
      (_a2 = liveRegionControllerRef.current) === null || _a2 === void 0 ? void 0 : _a2.announce({ message: getContent(), delay, forceReannounce: true });
    }
  }));
  return import_react11.default.createElement(TagName, Object.assign({ ref: mergedRef }, baseProps, { className: clsx_m_default(styles_css_default3.root, styles_css_default4.root, className), hidden }), children);
});
var processNode = (childNode) => {
  if (childNode.nodeType === Node.TEXT_NODE) {
    return childNode.textContent || "";
  }
  if (childNode.nodeType === Node.ELEMENT_NODE) {
    return extractTextContent(childNode);
  }
  return "";
};
function extractTextContent(node) {
  var _a;
  if (!node || !((_a = node === null || node === void 0 ? void 0 : node.childNodes) === null || _a === void 0 ? void 0 : _a.length)) {
    return "";
  }
  return Array.from(node.childNodes, processNode).join(" ").replace(/\s+/g, " ").trim();
}
function getSourceContent(source) {
  return source.map((item) => {
    if (!item || typeof item === "string") {
      return item;
    }
    if (item.current) {
      return extractTextContent(item.current);
    }
  }).filter(Boolean).join(" ");
}

// node_modules/@cloudscape-design/components/spinner/internal.js
var import_react13 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/use-modal-component-analytics/index.js
var import_react12 = __toESM(require_react());
var useModalContextLoadingButtonComponent = (isPrimaryButton, loading) => {
  const modalContext = useModalContext();
  (0, import_react12.useEffect)(() => {
    if (!isPrimaryButton || !modalContext.isInModal) {
      return;
    }
    if (loading) {
      modalContext.componentLoadingCount.current++;
      return () => {
        modalContext.componentLoadingCount.current--;
        modalContext.emitTimeToContentReadyInModal(performance.now());
      };
    }
  }, [loading]);
};
var useModalContextLoadingComponent = () => {
  const modalContext = useModalContext();
  (0, import_react12.useEffect)(() => {
    if (!modalContext.isInModal) {
      return;
    }
    modalContext.componentLoadingCount.current++;
    return () => {
      modalContext.componentLoadingCount.current--;
      modalContext.emitTimeToContentReadyInModal(performance.now());
    };
  }, []);
};

// node_modules/@cloudscape-design/components/spinner/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/spinner/styles.scoped.css";
var styles_css_default5 = {
  "root": "awsui_root_1612d_152xz_183",
  "spinner-rotator": "awsui_spinner-rotator_1612d_152xz_1",
  "size-normal": "awsui_size-normal_1612d_152xz_198",
  "size-big": "awsui_size-big_1612d_152xz_206",
  "size-large": "awsui_size-large_1612d_152xz_214",
  "variant-normal": "awsui_variant-normal_1612d_152xz_222",
  "variant-disabled": "awsui_variant-disabled_1612d_152xz_225",
  "variant-inverted": "awsui_variant-inverted_1612d_152xz_228",
  "circle": "awsui_circle_1612d_152xz_240",
  "circle-left": "awsui_circle-left_1612d_152xz_268",
  "spinner-line-left": "awsui_spinner-line-left_1612d_152xz_1",
  "circle-right": "awsui_circle-right_1612d_152xz_273",
  "spinner-line-right": "awsui_spinner-line-right_1612d_152xz_1"
};

// node_modules/@cloudscape-design/components/spinner/internal.js
function InternalSpinner(_a) {
  var { size = "normal", variant = "normal", __internalRootRef } = _a, props = __rest(_a, ["size", "variant", "__internalRootRef"]);
  const baseProps = getBaseProps(props);
  useModalContextLoadingComponent();
  return import_react13.default.createElement(
    "span",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default5.root, styles_css_default5[`size-${size}`], styles_css_default5[`variant-${variant}`]), ref: __internalRootRef }),
    import_react13.default.createElement("span", { className: clsx_m_default(styles_css_default5.circle, styles_css_default5["circle-left"]) }),
    import_react13.default.createElement("span", { className: clsx_m_default(styles_css_default5.circle, styles_css_default5["circle-right"]) })
  );
}

// node_modules/@cloudscape-design/components/button/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/button/styles.scoped.css";
var styles_css_default6 = {
  "content": "awsui_content_vjswe_1tif4_153",
  "button": "awsui_button_vjswe_1tif4_157",
  "variant-normal": "awsui_variant-normal_vjswe_1tif4_206",
  "disabled": "awsui_disabled_vjswe_1tif4_224",
  "variant-primary": "awsui_variant-primary_vjswe_1tif4_231",
  "variant-link": "awsui_variant-link_vjswe_1tif4_256",
  "variant-icon": "awsui_variant-icon_vjswe_1tif4_281",
  "variant-inline-icon": "awsui_variant-inline-icon_vjswe_1tif4_306",
  "variant-inline-icon-pointer-target": "awsui_variant-inline-icon-pointer-target_vjswe_1tif4_331",
  "variant-inline-link": "awsui_variant-inline-link_vjswe_1tif4_356",
  "variant-modal-dismiss": "awsui_variant-modal-dismiss_vjswe_1tif4_385",
  "variant-flashbar-icon": "awsui_variant-flashbar-icon_vjswe_1tif4_410",
  "variant-breadcrumb-group": "awsui_variant-breadcrumb-group_vjswe_1tif4_435",
  "variant-menu-trigger": "awsui_variant-menu-trigger_vjswe_1tif4_465",
  "button-no-text": "awsui_button-no-text_vjswe_1tif4_557",
  "button-no-wrap": "awsui_button-no-wrap_vjswe_1tif4_561",
  "full-width": "awsui_full-width_vjswe_1tif4_564",
  "icon-left": "awsui_icon-left_vjswe_1tif4_586",
  "icon-right": "awsui_icon-right_vjswe_1tif4_591",
  "icon": "awsui_icon_vjswe_1tif4_586",
  "link": "awsui_link_vjswe_1tif4_610",
  "disabled-with-reason": "awsui_disabled-with-reason_vjswe_1tif4_610"
};

// node_modules/@cloudscape-design/components/button/internal.js
var import_react23 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/tooltip/index.js
var import_react20 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/arrow.js
var import_react14 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/popover/styles.scoped.css";
var styles_css_default7 = {
  "arrow": "awsui_arrow_xjuzf_f2x4x_153",
  "arrow-outer": "awsui_arrow-outer_xjuzf_f2x4x_157",
  "arrow-inner": "awsui_arrow-inner_xjuzf_f2x4x_157",
  "arrow-position-right-top": "awsui_arrow-position-right-top_xjuzf_f2x4x_199",
  "arrow-position-right-bottom": "awsui_arrow-position-right-bottom_xjuzf_f2x4x_199",
  "arrow-position-left-top": "awsui_arrow-position-left-top_xjuzf_f2x4x_202",
  "arrow-position-left-bottom": "awsui_arrow-position-left-bottom_xjuzf_f2x4x_202",
  "arrow-position-top-center": "awsui_arrow-position-top-center_xjuzf_f2x4x_205",
  "arrow-position-top-right": "awsui_arrow-position-top-right_xjuzf_f2x4x_205",
  "arrow-position-top-left": "awsui_arrow-position-top-left_xjuzf_f2x4x_205",
  "arrow-position-top-responsive": "awsui_arrow-position-top-responsive_xjuzf_f2x4x_205",
  "arrow-position-bottom-center": "awsui_arrow-position-bottom-center_xjuzf_f2x4x_208",
  "arrow-position-bottom-right": "awsui_arrow-position-bottom-right_xjuzf_f2x4x_208",
  "arrow-position-bottom-left": "awsui_arrow-position-bottom-left_xjuzf_f2x4x_208",
  "arrow-position-bottom-responsive": "awsui_arrow-position-bottom-responsive_xjuzf_f2x4x_208",
  "body": "awsui_body_xjuzf_f2x4x_220",
  "body-overflow-visible": "awsui_body-overflow-visible_xjuzf_f2x4x_256",
  "body-variant-chart": "awsui_body-variant-chart_xjuzf_f2x4x_259",
  "has-dismiss": "awsui_has-dismiss_xjuzf_f2x4x_264",
  "dismiss": "awsui_dismiss_xjuzf_f2x4x_269",
  "dismiss-control": "awsui_dismiss-control_xjuzf_f2x4x_277",
  "header-row": "awsui_header-row_xjuzf_f2x4x_281",
  "header": "awsui_header_xjuzf_f2x4x_281",
  "content": "awsui_content_xjuzf_f2x4x_306",
  "content-overflow-visible": "awsui_content-overflow-visible_xjuzf_f2x4x_314",
  "container": "awsui_container_xjuzf_f2x4x_326",
  "container-arrow-position-bottom-left": "awsui_container-arrow-position-bottom-left_xjuzf_f2x4x_337",
  "container-arrow-position-bottom-center": "awsui_container-arrow-position-bottom-center_xjuzf_f2x4x_337",
  "container-arrow-position-bottom-right": "awsui_container-arrow-position-bottom-right_xjuzf_f2x4x_337",
  "container-arrow-position-top-left": "awsui_container-arrow-position-top-left_xjuzf_f2x4x_342",
  "container-arrow-position-top-center": "awsui_container-arrow-position-top-center_xjuzf_f2x4x_342",
  "container-arrow-position-top-right": "awsui_container-arrow-position-top-right_xjuzf_f2x4x_342",
  "container-arrow-position-right-top": "awsui_container-arrow-position-right-top_xjuzf_f2x4x_347",
  "container-arrow-position-right-bottom": "awsui_container-arrow-position-right-bottom_xjuzf_f2x4x_347",
  "container-arrow-position-left-top": "awsui_container-arrow-position-left-top_xjuzf_f2x4x_352",
  "container-arrow-position-left-bottom": "awsui_container-arrow-position-left-bottom_xjuzf_f2x4x_352",
  "container-body": "awsui_container-body_xjuzf_f2x4x_358",
  "container-body-variant-annotation": "awsui_container-body-variant-annotation_xjuzf_f2x4x_398",
  "container-body-size-small": "awsui_container-body-size-small_xjuzf_f2x4x_403",
  "fixed-width": "awsui_fixed-width_xjuzf_f2x4x_406",
  "container-body-size-medium": "awsui_container-body-size-medium_xjuzf_f2x4x_410",
  "container-body-size-large": "awsui_container-body-size-large_xjuzf_f2x4x_417",
  "container-arrow": "awsui_container-arrow_xjuzf_f2x4x_337",
  "container-arrow-position-top-responsive": "awsui_container-arrow-position-top-responsive_xjuzf_f2x4x_467",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_xjuzf_f2x4x_1",
  "refresh": "awsui_refresh_xjuzf_f2x4x_525",
  "root": "awsui_root_xjuzf_f2x4x_547",
  "no-wrap": "awsui_no-wrap_xjuzf_f2x4x_579",
  "root-filtering-token": "awsui_root-filtering-token_xjuzf_f2x4x_583",
  "trigger": "awsui_trigger_xjuzf_f2x4x_587",
  "overflow-ellipsis": "awsui_overflow-ellipsis_xjuzf_f2x4x_594",
  "trigger-type-text-inline": "awsui_trigger-type-text-inline_xjuzf_f2x4x_602",
  "trigger-type-text": "awsui_trigger-type-text_xjuzf_f2x4x_602",
  "trigger-type-filtering-token": "awsui_trigger-type-filtering-token_xjuzf_f2x4x_670",
  "popover-inline-content": "awsui_popover-inline-content_xjuzf_f2x4x_674",
  "hover-area": "awsui_hover-area_xjuzf_f2x4x_678"
};

// node_modules/@cloudscape-design/components/popover/arrow.js
var Arrow = (props) => {
  const isVisualRefresh = useVisualRefresh();
  return import_react14.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default7.arrow, props.position && styles_css_default7[`arrow-position-${props.position}`]) },
    import_react14.default.createElement("div", { className: styles_css_default7["arrow-outer"] }),
    import_react14.default.createElement("div", { className: clsx_m_default(styles_css_default7["arrow-inner"], isVisualRefresh && styles_css_default7.refresh) })
  );
};
var arrow_default = import_react14.default.memo(Arrow);

// node_modules/@cloudscape-design/components/popover/body.js
var import_react15 = __toESM(require_react());
function PopoverBody({ dismissButton: showDismissButton, dismissAriaLabel, header, children, onDismiss, variant, overflowVisible, className, ariaLabelledby, closeAnalyticsAction }) {
  const i18n = useInternalI18n("popover");
  const labelledById = useUniqueId("awsui-popover-");
  const dismissButtonFocused = (0, import_react15.useRef)(false);
  const dismissButtonRef = (0, import_react15.useRef)(null);
  const onKeyDown = (0, import_react15.useCallback)((event) => {
    if (event.keyCode === KeyCode.escape) {
      event.stopPropagation();
      onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();
    }
  }, [onDismiss]);
  (0, import_react15.useEffect)(() => {
    var _a;
    if (showDismissButton && !dismissButtonFocused.current) {
      (_a = dismissButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });
    }
    dismissButtonFocused.current = showDismissButton;
  }, [showDismissButton]);
  const dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && import_react15.default.createElement(
    "div",
    Object.assign({ className: styles_css_default7.dismiss }, closeAnalyticsAction ? getAnalyticsMetadataAttribute({ action: closeAnalyticsAction }) : {}),
    import_react15.default.createElement(InternalButton, { variant: "icon", formAction: "none", iconName: "close", className: styles_css_default7["dismiss-control"], ariaLabel: i18n("dismissAriaLabel", dismissAriaLabel), onClick: () => onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(), ref: dismissButtonRef })
  );
  const isDialog = showDismissButton;
  const shouldTrapFocus = showDismissButton && variant !== "annotation";
  const dialogProps = isDialog ? {
    role: "dialog",
    "aria-labelledby": ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : header ? labelledById : void 0
  } : {};
  return import_react15.default.createElement(
    "div",
    Object.assign({ className: clsx_m_default(styles_css_default7.body, styles_css_default7[`body-variant-${variant}`], className, {
      [styles_css_default7["body-overflow-visible"]]: overflowVisible === "both"
    }), onKeyDown }, dialogProps),
    import_react15.default.createElement(
      focus_lock_default,
      { disabled: !shouldTrapFocus, autoFocus: false },
      header && import_react15.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default7["header-row"], showDismissButton && styles_css_default7["has-dismiss"]) },
        dismissButton,
        import_react15.default.createElement(
          "div",
          { className: styles_css_default7.header, id: labelledById },
          import_react15.default.createElement("h2", null, header)
        )
      ),
      import_react15.default.createElement(
        "div",
        { className: !header && showDismissButton ? styles_css_default7["has-dismiss"] : void 0 },
        !header && dismissButton,
        import_react15.default.createElement("div", { className: clsx_m_default(styles_css_default7.content, { [styles_css_default7["content-overflow-visible"]]: !!overflowVisible }) }, children)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/popover/container.js
var import_react17 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/use-popover-position.js
var import_react16 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/utils/positions.js
var ARROW_OFFSET = 12;
var PRIORITY_MAPPING = {
  top: [
    "top-center",
    "top-right",
    "top-left",
    "bottom-center",
    "bottom-right",
    "bottom-left",
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom"
  ],
  bottom: [
    "bottom-center",
    "bottom-right",
    "bottom-left",
    "top-center",
    "top-right",
    "top-left",
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom"
  ],
  left: [
    "left-top",
    "left-bottom",
    "right-top",
    "right-bottom",
    "bottom-center",
    "top-center",
    "bottom-left",
    "top-left",
    "bottom-right",
    "top-right"
  ],
  right: [
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom",
    "bottom-center",
    "top-center",
    "bottom-right",
    "top-right",
    "bottom-left",
    "top-left"
  ]
};
var RECTANGLE_CALCULATIONS = {
  "top-center": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart - body.blockSize - arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - body.inlineSize / 2,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "top-right": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart - body.blockSize - arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - ARROW_OFFSET - arrow.inlineSize / 2,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "top-left": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart - body.blockSize - arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 + ARROW_OFFSET + arrow.inlineSize / 2 - body.inlineSize,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "bottom-center": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart + trigger.blockSize + arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - body.inlineSize / 2,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "bottom-right": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart + trigger.blockSize + arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 - ARROW_OFFSET - arrow.inlineSize / 2,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "bottom-left": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart + trigger.blockSize + arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize / 2 + ARROW_OFFSET + arrow.inlineSize / 2 - body.inlineSize,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "right-top": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart + trigger.blockSize / 2 - ARROW_OFFSET - arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize + arrow.blockSize,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "right-bottom": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart + trigger.blockSize / 2 - body.blockSize + ARROW_OFFSET + arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart + trigger.inlineSize + arrow.blockSize,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "left-top": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart + trigger.blockSize / 2 - ARROW_OFFSET - arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart - body.inlineSize - arrow.blockSize,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  },
  "left-bottom": ({ body, trigger, arrow }) => {
    return {
      insetBlockStart: trigger.insetBlockStart + trigger.blockSize / 2 - body.blockSize + ARROW_OFFSET + arrow.blockSize,
      insetInlineStart: trigger.insetInlineStart - body.inlineSize - arrow.blockSize,
      inlineSize: body.inlineSize,
      blockSize: body.blockSize
    };
  }
};
function fitIntoContainer(inner, outer) {
  let { insetInlineStart, inlineSize, insetBlockStart, blockSize } = inner;
  if (insetInlineStart < outer.insetInlineStart) {
    inlineSize = insetInlineStart + inlineSize - outer.insetInlineStart;
    insetInlineStart = outer.insetInlineStart;
  } else if (insetInlineStart + inlineSize > outer.insetInlineStart + outer.inlineSize) {
    inlineSize = outer.insetInlineStart + outer.inlineSize - insetInlineStart;
  }
  if (insetBlockStart < outer.insetBlockStart) {
    blockSize = insetBlockStart + blockSize - outer.insetBlockStart;
    insetBlockStart = outer.insetBlockStart;
  } else if (insetBlockStart + blockSize > outer.insetBlockStart + outer.blockSize) {
    blockSize = outer.insetBlockStart + outer.blockSize - insetBlockStart;
  }
  return { insetInlineStart, inlineSize, insetBlockStart, blockSize };
}
function getTallestRect(rect1, rect2) {
  return rect1.blockSize >= rect2.blockSize ? rect1 : rect2;
}
function getIntersection(rectangles) {
  let boundingBox = null;
  for (const currentRect of rectangles) {
    if (!boundingBox) {
      boundingBox = currentRect;
      continue;
    }
    const insetInlineStart = Math.max(boundingBox.insetInlineStart, currentRect.insetInlineStart);
    const insetBlockStart = Math.max(boundingBox.insetBlockStart, currentRect.insetBlockStart);
    const insetInlineEnd = Math.min(boundingBox.insetInlineStart + boundingBox.inlineSize, currentRect.insetInlineStart + currentRect.inlineSize);
    const insetBlockEnd = Math.min(boundingBox.insetBlockStart + boundingBox.blockSize, currentRect.insetBlockStart + currentRect.blockSize);
    if (insetInlineEnd < insetInlineStart || insetBlockEnd < insetBlockStart) {
      return null;
    }
    boundingBox = {
      insetInlineStart,
      insetBlockStart,
      inlineSize: insetInlineEnd - insetInlineStart,
      blockSize: insetBlockEnd - insetBlockStart
    };
  }
  return boundingBox;
}
function calculatePosition({
  preferredPosition,
  fixedInternalPosition,
  trigger,
  arrow,
  body,
  container,
  viewport,
  // the popover is only bound by the viewport if it is rendered in a portal
  renderWithPortal,
  allowVerticalOverflow,
  minVisibleBlockSize
}) {
  let bestOption = null;
  const preferredInternalPositions = fixedInternalPosition ? [fixedInternalPosition] : PRIORITY_MAPPING[preferredPosition];
  for (const internalPosition2 of preferredInternalPositions) {
    const rect2 = RECTANGLE_CALCULATIONS[internalPosition2]({ body, trigger, arrow });
    const visibleArea = renderWithPortal ? getIntersection([rect2, viewport]) : getIntersection([rect2, viewport, container]);
    const fitsBlockSize = minVisibleBlockSize === void 0 ? visibleArea && visibleArea.blockSize === body.blockSize : visibleArea && visibleArea.blockSize >= Math.min(body.blockSize, minVisibleBlockSize);
    const fitsInlineSize = visibleArea && visibleArea.inlineSize === body.inlineSize;
    if (fitsBlockSize && fitsInlineSize) {
      const scrollable2 = visibleArea && visibleArea.blockSize < body.blockSize;
      return { internalPosition: internalPosition2, rect: scrollable2 ? fitIntoContainer(rect2, viewport) : rect2, scrollable: scrollable2 };
    }
    const newOption = { rect: rect2, internalPosition: internalPosition2, visibleArea };
    bestOption = getBestOption(newOption, bestOption);
  }
  const internalPosition = (bestOption === null || bestOption === void 0 ? void 0 : bestOption.internalPosition) || "right-top";
  const rect = RECTANGLE_CALCULATIONS[internalPosition]({ body, trigger, arrow });
  const tallestBoundingContainer = getTallestRect(viewport, container);
  const boundingContainer = allowVerticalOverflow && isTopOrBottom(internalPosition) ? {
    insetBlockStart: tallestBoundingContainer.insetBlockStart,
    blockSize: tallestBoundingContainer.blockSize,
    insetInlineStart: viewport.insetInlineStart,
    inlineSize: viewport.inlineSize
  } : viewport;
  const optimizedRect = fitIntoContainer(rect, boundingContainer);
  const scrollable = optimizedRect.blockSize < rect.blockSize;
  return { internalPosition, rect: optimizedRect, scrollable };
}
function getBestOption(option1, option2) {
  if (!(option2 === null || option2 === void 0 ? void 0 : option2.visibleArea)) {
    return option1;
  }
  if (!option1.visibleArea) {
    return option2;
  }
  if (option1.visibleArea.inlineSize === option2.visibleArea.inlineSize) {
    return option1.visibleArea.blockSize > option2.visibleArea.blockSize ? option1 : option2;
  }
  return option1.visibleArea.inlineSize > option2.visibleArea.inlineSize ? option1 : option2;
}
function getOffsetDimensions(element) {
  return { offsetHeight: element.offsetHeight, offsetWidth: element.offsetWidth };
}
function getDimensions(element) {
  const computedStyle = getComputedStyle(element);
  return {
    inlineSize: parseFloat(computedStyle.inlineSize),
    blockSize: parseFloat(computedStyle.blockSize)
  };
}
function isTopOrBottom(internalPosition) {
  return ["top", "bottom"].includes(internalPosition.split("-")[0]);
}
function isCenterOutside(child, parent) {
  const childCenter = child.insetBlockStart + child.blockSize / 2;
  const overflowsBlockStart = childCenter < parent.insetBlockStart;
  const overflowsBlockEnd = childCenter > parent.insetBlockEnd;
  return overflowsBlockStart || overflowsBlockEnd;
}

// node_modules/@cloudscape-design/components/popover/use-popover-position.js
function usePopoverPosition({ popoverRef, bodyRef, arrowRef, getTrack, contentRef, allowScrollToFit, allowVerticalOverflow, preferredPosition, renderWithPortal, keepPosition, hideOnOverscroll, minVisibleBlockSize }) {
  const previousInternalPositionRef = (0, import_react16.useRef)(null);
  const [popoverStyle, setPopoverStyle] = (0, import_react16.useState)({});
  const [internalPosition, setInternalPosition] = (0, import_react16.useState)(null);
  const [isOverscrolling, setIsOverscrolling] = (0, import_react16.useState)(false);
  const positionHandlerRef = (0, import_react16.useRef)(() => {
  });
  const scrollableContainerRectRef = (0, import_react16.useRef)(null);
  const updatePositionHandler = (0, import_react16.useCallback)((onContentResize = false) => {
    var _a;
    const track = getTrack();
    if (!track || !popoverRef.current || !bodyRef.current || !contentRef.current || !arrowRef.current) {
      return;
    }
    const popover = popoverRef.current;
    const body = bodyRef.current;
    const arrow = arrowRef.current;
    const document2 = popover.ownerDocument;
    const { offsetWidth, offsetHeight } = getOffsetDimensions(popover);
    if (offsetWidth === 0 || offsetHeight === 0 || !nodeContains(document2.body, track)) {
      return;
    }
    const prevInsetBlockStart = popover.style.insetBlockStart;
    const prevInsetInlineStart = popover.style.insetInlineStart;
    popover.style.insetBlockStart = "0";
    popover.style.insetInlineStart = "0";
    body.style.maxBlockSize = "";
    body.style.overflowX = "";
    body.style.overflowY = "";
    const viewportRect = getViewportRect(document2.defaultView);
    const trackRect = getLogicalBoundingClientRect(track);
    const arrowRect = getDimensions(arrow);
    const { containingBlock, boundary } = findUpUntilMultiple({
      startElement: popover,
      tests: {
        containingBlock: isContainingBlock,
        boundary: (element) => isContainingBlock(element) || isBoundary(element)
      }
    });
    const containingBlockRect = containingBlock ? getLogicalBoundingClientRect(containingBlock) : viewportRect;
    const boundaryRect = boundary ? getLogicalBoundingClientRect(boundary) : getDocumentRect(document2);
    const bodyBorderWidth = getBorderWidth(body);
    const contentRect = getLogicalBoundingClientRect(contentRef.current);
    const contentBoundingBox = {
      inlineSize: contentRect.inlineSize + 2 * bodyBorderWidth,
      blockSize: contentRect.blockSize + 2 * bodyBorderWidth
    };
    const shouldKeepPosition = keepPosition && onContentResize && !!previousInternalPositionRef.current;
    const fixedInternalPosition = (_a = shouldKeepPosition && previousInternalPositionRef.current) !== null && _a !== void 0 ? _a : void 0;
    const { scrollable, internalPosition: newInternalPosition, rect } = calculatePosition({
      preferredPosition,
      fixedInternalPosition,
      trigger: trackRect,
      arrow: arrowRect,
      body: contentBoundingBox,
      container: boundaryRect,
      viewport: viewportRect,
      renderWithPortal,
      allowVerticalOverflow,
      minVisibleBlockSize
    });
    const popoverOffset = toRelativePosition(rect, containingBlockRect);
    const trackRelativeOffset = toRelativePosition(popoverOffset, toRelativePosition(trackRect, containingBlockRect));
    popover.style.insetBlockStart = prevInsetBlockStart;
    popover.style.insetInlineStart = prevInsetInlineStart;
    if (scrollable) {
      body.style.maxBlockSize = rect.blockSize + "px";
      body.style.overflowX = "hidden";
      body.style.overflowY = "auto";
    }
    previousInternalPositionRef.current = newInternalPosition;
    setInternalPosition(newInternalPosition);
    const shouldScroll = allowScrollToFit && !shouldKeepPosition;
    const insetBlockStart = shouldScroll ? popoverOffset.insetBlockStart + calculateScroll(rect) : popoverOffset.insetBlockStart;
    setPopoverStyle({ insetBlockStart, insetInlineStart: popoverOffset.insetInlineStart });
    if (shouldScroll) {
      const scrollableParent = getFirstScrollableParent(popover);
      scrollRectangleIntoView(rect, scrollableParent);
    }
    if (hideOnOverscroll && track instanceof HTMLElement) {
      const scrollableContainer = getFirstScrollableParent(track);
      if (scrollableContainer) {
        scrollableContainerRectRef.current = getLogicalBoundingClientRect(scrollableContainer);
      }
    }
    positionHandlerRef.current = () => {
      const track2 = getTrack();
      if (!track2) {
        return;
      }
      const trackRect2 = getLogicalBoundingClientRect(track2);
      const newTrackOffset = toRelativePosition(trackRect2, containingBlock ? getLogicalBoundingClientRect(containingBlock) : viewportRect);
      setPopoverStyle({
        insetBlockStart: newTrackOffset.insetBlockStart + trackRelativeOffset.insetBlockStart,
        insetInlineStart: newTrackOffset.insetInlineStart + trackRelativeOffset.insetInlineStart
      });
      if (hideOnOverscroll && scrollableContainerRectRef.current) {
        setIsOverscrolling(isCenterOutside(trackRect2, scrollableContainerRectRef.current));
      }
    };
  }, [
    getTrack,
    popoverRef,
    bodyRef,
    contentRef,
    arrowRef,
    keepPosition,
    preferredPosition,
    renderWithPortal,
    allowVerticalOverflow,
    allowScrollToFit,
    hideOnOverscroll,
    minVisibleBlockSize
  ]);
  return { updatePositionHandler, popoverStyle, internalPosition, positionHandlerRef, isOverscrolling };
}
function getBorderWidth(element) {
  return parseInt(getComputedStyle(element).borderWidth) || 0;
}
function toRelativePosition(element, parent) {
  return {
    insetBlockStart: element.insetBlockStart - parent.insetBlockStart,
    insetInlineStart: element.insetInlineStart - parent.insetInlineStart
  };
}
function getViewportRect(window2) {
  var _a, _b, _c, _d;
  return {
    insetBlockStart: 0,
    insetInlineStart: 0,
    inlineSize: (_b = (_a = window2.visualViewport) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : window2.innerWidth,
    blockSize: (_d = (_c = window2.visualViewport) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : window2.innerHeight
  };
}
function getDocumentRect(document2) {
  const { insetBlockStart, insetInlineStart } = getLogicalBoundingClientRect(document2.documentElement);
  return {
    insetBlockStart,
    insetInlineStart,
    inlineSize: document2.documentElement.scrollWidth,
    blockSize: document2.documentElement.scrollHeight
  };
}
function isBoundary(element) {
  const computedStyle = getComputedStyle(element);
  return !!computedStyle.clipPath && computedStyle.clipPath !== "none";
}

// node_modules/@cloudscape-design/components/popover/container.js
function PopoverContainer({ position, trackRef, getTrack: externalGetTrack, trackKey, minVisibleBlockSize, arrow, children, zIndex, renderWithPortal, size, fixedWidth, variant, keepPosition, allowScrollToFit, allowVerticalOverflow, hideOnOverscroll, hoverArea, className }) {
  const bodyRef = (0, import_react17.useRef)(null);
  const contentRef = (0, import_react17.useRef)(null);
  const popoverRef = (0, import_react17.useRef)(null);
  const arrowRef = (0, import_react17.useRef)(null);
  const isRefresh = useVisualRefresh();
  const getTrack = (0, import_react17.useRef)(() => {
    if (trackRef) {
      return trackRef.current;
    }
    if (externalGetTrack) {
      return externalGetTrack();
    }
    throw new Error("Invariant violation: must provide either trackRef or getTrack.");
  });
  const { updatePositionHandler, popoverStyle, internalPosition, positionHandlerRef, isOverscrolling } = usePopoverPosition({
    popoverRef,
    bodyRef,
    arrowRef,
    getTrack: getTrack.current,
    contentRef,
    allowScrollToFit,
    allowVerticalOverflow,
    preferredPosition: position,
    renderWithPortal,
    keepPosition,
    hideOnOverscroll,
    minVisibleBlockSize
  });
  (0, import_react17.useLayoutEffect)(() => {
    updatePositionHandler();
  }, [updatePositionHandler, trackKey]);
  useResizeObserver(contentRef, () => {
    updatePositionHandler(true);
  });
  (0, import_react17.useLayoutEffect)(() => {
    const controller = new AbortController();
    const onClick = (event) => __awaiter(this, void 0, void 0, function* () {
      if (
        // Do not update position if keepPosition is true.
        keepPosition || // If the click was on the trigger, this will make the popover appear or disappear,
        // so no need to update its position either in this case.
        nodeContains(getTrack.current(), event.target)
      ) {
        return;
      }
      const popoverOffset = popoverRef.current && getLogicalBoundingClientRect(popoverRef.current);
      if (!popoverOffset || popoverOffset.insetBlockStart < 0 || popoverOffset.insetBlockEnd > window.innerHeight) {
        return;
      }
      const targetTime = performance.now() + 1e3;
      while (performance.now() < targetTime) {
        if (controller.signal.aborted) {
          break;
        }
        updatePositionHandler();
        if (typeof requestIdleCallback !== "undefined") {
          yield new Promise((r) => requestIdleCallback(r));
        } else {
          yield new Promise((r) => setTimeout(r, 50));
        }
      }
    });
    const updatePositionOnResize = () => requestAnimationFrame(() => updatePositionHandler());
    const refreshPosition = () => requestAnimationFrame(() => positionHandlerRef.current());
    window.addEventListener("click", onClick, { signal: controller.signal });
    window.addEventListener("resize", updatePositionOnResize, { signal: controller.signal });
    window.addEventListener("scroll", refreshPosition, { capture: true, signal: controller.signal });
    return () => {
      controller.abort();
    };
  }, [hideOnOverscroll, keepPosition, positionHandlerRef, trackRef, updatePositionHandler]);
  return isOverscrolling ? null : import_react17.default.createElement(
    "div",
    { ref: popoverRef, style: Object.assign(Object.assign({}, popoverStyle), { zIndex }), className: clsx_m_default(styles_css_default7.container, isRefresh && styles_css_default7.refresh, className) },
    import_react17.default.createElement("div", { ref: arrowRef, className: clsx_m_default(styles_css_default7[`container-arrow`], styles_css_default7[`container-arrow-position-${internalPosition}`]), "aria-hidden": true }, arrow(internalPosition)),
    import_react17.default.createElement("div", { ref: bodyRef, className: clsx_m_default(styles_css_default7["container-body"], styles_css_default7[`container-body-size-${size}`], {
      [styles_css_default7["fixed-width"]]: fixedWidth,
      [styles_css_default7[`container-body-variant-${variant}`]]: variant
    }) }, hoverArea ? import_react17.default.createElement(
      "div",
      { className: styles_css_default7["hover-area"] },
      import_react17.default.createElement("div", { ref: contentRef }, children)
    ) : import_react17.default.createElement("div", { ref: contentRef }, children))
  );
}

// node_modules/@cloudscape-design/components/internal/components/transition/index.js
var import_react18 = __toESM(require_react());
var import_react19 = __toESM(require_react());
function Transition(_a) {
  var { in: isIn, children, exit = true, onStatusChange = () => void 0, disabled = false, transitionChangeDelay } = _a, rest = __rest(_a, ["in", "children", "exit", "onStatusChange", "disabled", "transitionChangeDelay"]);
  const transitionRootElement = (0, import_react19.useRef)(null);
  const [transitionState, setTransitionState] = (0, import_react18.useState)(isIn ? "entered" : "exited");
  const motionDisabled = useReducedMotion(transitionRootElement) || disabled;
  const addTransitionEndListener = (0, import_react19.useCallback)((done) => {
    const node = transitionRootElement.current;
    if (node === null) {
      return;
    }
    const controller = new AbortController();
    const listener = (e) => {
      if (e.target === node) {
        controller.abort();
        done();
      }
    };
    node.addEventListener("transitionend", listener, { signal: controller.signal });
    node.addEventListener("animationend", listener, { signal: controller.signal });
  }, []);
  return import_react18.default.createElement(Transition_default, Object.assign({ addEndListener: addTransitionEndListener, timeout: motionDisabled ? 0 : void 0, in: isIn, nodeRef: transitionRootElement, exit, onEnter: (isAppearing) => {
    if (!isAppearing) {
      setTransitionState("enter");
      onStatusChange("enter");
    }
  }, onEntering: (isAppearing) => {
    var _a2;
    if (!isAppearing) {
      void ((_a2 = transitionRootElement.current) === null || _a2 === void 0 ? void 0 : _a2.offsetHeight);
      if (transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering) {
        setTimeout(() => {
          setTransitionState("entering");
          onStatusChange("entering");
        }, transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering);
      } else {
        setTransitionState("entering");
        onStatusChange("entering");
      }
    }
  }, onEntered: (isAppearing) => {
    if (!isAppearing) {
      setTransitionState("entered");
      onStatusChange("entered");
    }
  }, onExit: () => {
    setTransitionState("exit");
    onStatusChange("exit");
  }, onExiting: () => {
    setTransitionState("exiting");
    onStatusChange("exiting");
  }, onExited: () => {
    setTransitionState("exited");
    onStatusChange("exited");
  } }, rest), () => children(transitionState, transitionRootElement));
}

// node_modules/@cloudscape-design/components/internal/components/tooltip/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/internal/components/tooltip/styles.scoped.css";
var styles_css_default8 = {
  "root": "awsui_root_1qprf_160mh_5"
};

// node_modules/@cloudscape-design/components/internal/components/tooltip/index.js
function Tooltip({ value, trackRef, trackKey, className, contentAttributes = {}, position = "top", size = "small", hideOnOverscroll, onDismiss }) {
  if (!trackKey && (typeof value === "string" || typeof value === "number")) {
    trackKey = value;
  }
  (0, import_react20.useEffect)(() => {
    const controller = new AbortController();
    window.addEventListener("keydown", (event) => {
      if (event.key === "Escape") {
        event.stopPropagation();
        onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();
      }
    }, {
      // The tooltip is often activated on mouseover, which means the focus can
      // be anywhere else on the page. Capture also means that this gets called
      // before any wrapper modals or dialogs can detect it and act on it.
      capture: true,
      signal: controller.signal
    });
    return () => {
      controller.abort();
    };
  }, [onDismiss]);
  return import_react20.default.createElement(
    Portal,
    null,
    import_react20.default.createElement(
      "div",
      Object.assign({ className: styles_css_default8.root }, contentAttributes, { "data-testid": trackKey }),
      import_react20.default.createElement(Transition, { in: true }, () => import_react20.default.createElement(
        PopoverContainer,
        { trackRef, trackKey, size, fixedWidth: false, position, zIndex: 7e3, arrow: (position2) => import_react20.default.createElement(arrow_default, { position: position2 }), hideOnOverscroll, className },
        import_react20.default.createElement(PopoverBody, { dismissButton: false, dismissAriaLabel: void 0, onDismiss: void 0, header: void 0 }, value)
      ))
    )
  );
}

// node_modules/@cloudscape-design/components/internal/context/single-tab-stop-navigation-context.js
var import_react21 = __toESM(require_react());
var defaultValue = {
  navigationActive: false,
  registerFocusable: () => () => {
  }
};
var SingleTabStopNavigationContext = (0, import_react21.createContext)(defaultValue);
function useSingleTabStopNavigation(focusable, options) {
  var _a;
  const { navigationActive: contextNavigationActive, registerFocusable } = (0, import_react21.useContext)(SingleTabStopNavigationContext);
  const [focusTargetActive, setFocusTargetActive] = (0, import_react21.useState)(false);
  const navigationDisabled = (options === null || options === void 0 ? void 0 : options.tabIndex) && (options === null || options === void 0 ? void 0 : options.tabIndex) < 0;
  const navigationActive = contextNavigationActive && !navigationDisabled;
  (0, import_react21.useLayoutEffect)(() => {
    if (navigationActive && focusable && focusable.current) {
      const unregister = registerFocusable(focusable.current, (isFocusable2) => setFocusTargetActive(isFocusable2));
      return () => unregister();
    }
  });
  let tabIndex = options === null || options === void 0 ? void 0 : options.tabIndex;
  if (navigationActive) {
    tabIndex = !focusTargetActive ? -1 : (_a = options === null || options === void 0 ? void 0 : options.tabIndex) !== null && _a !== void 0 ? _a : 0;
  }
  return { navigationActive, tabIndex };
}
var SingleTabStopNavigationProvider = (0, import_react21.forwardRef)(({ navigationActive, children, getNextFocusTarget, isElementSuppressed, onRegisterFocusable, onUnregisterActive }, ref) => {
  const focusables = (0, import_react21.useRef)(/* @__PURE__ */ new Set());
  const focusHandlers = (0, import_react21.useRef)(/* @__PURE__ */ new Map());
  const focusablesState = (0, import_react21.useRef)(/* @__PURE__ */ new WeakMap());
  const focusTarget = (0, import_react21.useRef)(null);
  function onUnregisterFocusable(focusableElement) {
    const isUnregisteringFocusedNode = nodeBelongs(focusableElement, document.activeElement);
    if (isUnregisteringFocusedNode) {
      setTimeout(() => onUnregisterActive === null || onUnregisterActive === void 0 ? void 0 : onUnregisterActive(focusableElement), 0);
    }
  }
  function registerFocusable(focusableElement, changeHandler) {
    focusables.current.add(focusableElement);
    focusHandlers.current.set(focusableElement, changeHandler);
    const isFocusable2 = !!focusablesState.current.get(focusableElement);
    const newIsFocusable = focusTarget.current === focusableElement || !!(isElementSuppressed === null || isElementSuppressed === void 0 ? void 0 : isElementSuppressed(focusableElement));
    if (newIsFocusable !== isFocusable2) {
      focusablesState.current.set(focusableElement, newIsFocusable);
      changeHandler(newIsFocusable);
    }
    onRegisterFocusable === null || onRegisterFocusable === void 0 ? void 0 : onRegisterFocusable(focusableElement);
    return () => unregisterFocusable(focusableElement);
  }
  function unregisterFocusable(focusableElement) {
    focusables.current.delete(focusableElement);
    focusHandlers.current.delete(focusableElement);
    onUnregisterFocusable === null || onUnregisterFocusable === void 0 ? void 0 : onUnregisterFocusable(focusableElement);
  }
  function updateFocusTarget() {
    var _a;
    focusTarget.current = getNextFocusTarget();
    for (const focusableElement of focusables.current) {
      const isFocusable2 = (_a = focusablesState.current.get(focusableElement)) !== null && _a !== void 0 ? _a : false;
      const newIsFocusable = focusTarget.current === focusableElement || !!(isElementSuppressed === null || isElementSuppressed === void 0 ? void 0 : isElementSuppressed(focusableElement));
      if (newIsFocusable !== isFocusable2) {
        focusablesState.current.set(focusableElement, newIsFocusable);
        focusHandlers.current.get(focusableElement)(newIsFocusable);
      }
    }
  }
  function getFocusTarget() {
    return focusTarget.current;
  }
  function isRegistered(element) {
    return focusables.current.has(element);
  }
  (0, import_react21.useImperativeHandle)(ref, () => ({ updateFocusTarget, getFocusTarget, isRegistered }));
  return import_react21.default.createElement(SingleTabStopNavigationContext.Provider, { value: { navigationActive, registerFocusable } }, children);
});

// node_modules/@cloudscape-design/components/internal/generated/custom-css-properties/index.js
var customCSSPropertiesMap = {
  "maxContentWidth": "--awsui-max-content-width-kcc2gu",
  "minContentWidth": "--awsui-min-content-width-kcc2gu",
  "breadcrumbsGap": "--awsui-breadcrumbs-gap-kcc2gu",
  "contentGapLeft": "--awsui-content-gap-left-kcc2gu",
  "contentGapRight": "--awsui-content-gap-right-kcc2gu",
  "contentHeight": "--awsui-content-height-kcc2gu",
  "contentLayoutDefaultHorizontalPadding": "--awsui-content-layout-default-horizontal-padding-kcc2gu",
  "contentLayoutMaxContentWidth": "--awsui-content-layout-max-content-width-kcc2gu",
  "contentLayoutMainGap": "--awsui-content-layout-main-gap-kcc2gu",
  "defaultMaxContentWidth": "--awsui-default-max-content-width-kcc2gu",
  "defaultMinContentWidth": "--awsui-default-min-content-width-kcc2gu",
  "drawerSize": "--awsui-drawer-size-kcc2gu",
  "footerHeight": "--awsui-footer-height-kcc2gu",
  "headerGap": "--awsui-header-gap-kcc2gu",
  "headerHeight": "--awsui-header-height-kcc2gu",
  "layoutWidth": "--awsui-layout-width-kcc2gu",
  "mainGap": "--awsui-main-gap-kcc2gu",
  "mainOffsetLeft": "--awsui-main-offset-left-kcc2gu",
  "mainTemplateRows": "--awsui-main-template-rows-kcc2gu",
  "mobileBarHeight": "--awsui-mobile-bar-height-kcc2gu",
  "notificationsHeight": "--awsui-notifications-height-kcc2gu",
  "offsetTop": "--awsui-offset-top-kcc2gu",
  "overlapHeight": "--awsui-overlap-height-kcc2gu",
  "navigationWidth": "--awsui-navigation-width-kcc2gu",
  "splitPanelReportedHeaderSize": "--awsui-split-panel-reported-header-size-kcc2gu",
  "splitPanelReportedSize": "--awsui-split-panel-reported-size-kcc2gu",
  "splitPanelHeight": "--awsui-split-panel-height-kcc2gu",
  "splitPanelMinWidth": "--awsui-split-panel-min-width-kcc2gu",
  "splitPanelMaxWidth": "--awsui-split-panel-max-width-kcc2gu",
  "toolsMaxWidth": "--awsui-tools-max-width-kcc2gu",
  "toolsWidth": "--awsui-tools-width-kcc2gu",
  "toolsAnimationStartingOpacity": "--awsui-tools-animation-starting-opacity-kcc2gu",
  "contentScrollMargin": "--awsui-content-scroll-margin-kcc2gu",
  "flashbarStackDepth": "--awsui-flashbar-stack-depth-kcc2gu",
  "flashbarStackIndex": "--awsui-flashbar-stack-index-kcc2gu",
  "flashbarStickyBottomMargin": "--awsui-flashbar-sticky-bottom-margin-kcc2gu",
  "stackedNotificationsBottomMargin": "--awsui-stacked-notifications-bottom-margin-kcc2gu",
  "stackedNotificationsDefaultBottomMargin": "--awsui-stacked-notifications-default-bottom-margin-kcc2gu",
  "dropdownDefaultMaxWidth": "--awsui-dropdown-default-max-width-kcc2gu",
  "spinnerRotatorFrom": "--awsui-spinner-rotator-from-kcc2gu",
  "spinnerRotatorTo": "--awsui-spinner-rotator-to-kcc2gu",
  "spinnerLineLeftFrom": "--awsui-spinner-line-left-from-kcc2gu",
  "spinnerLineLeftTo": "--awsui-spinner-line-left-to-kcc2gu",
  "spinnerLineRightFrom": "--awsui-spinner-line-right-from-kcc2gu",
  "spinnerLineRightTo": "--awsui-spinner-line-right-to-kcc2gu",
  "sliderLabelCount": "--awsui-slider-label-count-kcc2gu",
  "sliderTickCount": "--awsui-slider-tick-count-kcc2gu",
  "sliderReferenceColumn": "--awsui-slider-reference-column-kcc2gu",
  "sliderNextReferenceColumn": "--awsui-slider-next-reference-column-kcc2gu",
  "sliderMaxStart": "--awsui-slider-max-start-kcc2gu",
  "sliderMinEnd": "--awsui-slider-min-end-kcc2gu",
  "sliderRangeInlineSize": "--awsui-slider-range-inline-size-kcc2gu",
  "sliderTooltipPosition": "--awsui-slider-tooltip-position-kcc2gu",
  "togglesLeftWidth": "--awsui-toggles-left-width-kcc2gu",
  "togglesRightWidth": "--awsui-toggles-right-width-kcc2gu",
  "promptInputMaxRows": "--awsui-prompt-input-max-rows-kcc2gu",
  "promptInputScrollHeight": "--awsui-prompt-input-scroll-height-kcc2gu",
  "dragHandleAnimationInlineOffset": "--awsui-drag-handle-animation-inline-offset-kcc2gu",
  "dragHandleAnimationBlockOffset": "--awsui-drag-handle-animation-block-offset-kcc2gu",
  "styleBackgroundActive": "--awsui-style-background-active-kcc2gu",
  "styleBackgroundDefault": "--awsui-style-background-default-kcc2gu",
  "styleBackgroundDisabled": "--awsui-style-background-disabled-kcc2gu",
  "styleBackgroundHover": "--awsui-style-background-hover-kcc2gu",
  "styleBorderColorActive": "--awsui-style-border-color-active-kcc2gu",
  "styleBorderColorDefault": "--awsui-style-border-color-default-kcc2gu",
  "styleBorderColorDisabled": "--awsui-style-border-color-disabled-kcc2gu",
  "styleBorderColorHover": "--awsui-style-border-color-hover-kcc2gu",
  "styleColorActive": "--awsui-style-color-active-kcc2gu",
  "styleColorDefault": "--awsui-style-color-default-kcc2gu",
  "styleColorDisabled": "--awsui-style-color-disabled-kcc2gu",
  "styleColorHover": "--awsui-style-color-hover-kcc2gu",
  "styleFocusRingBorderColor": "--awsui-style-focus-ring-border-color-kcc2gu",
  "styleFocusRingBorderRadius": "--awsui-style-focus-ring-border-radius-kcc2gu",
  "styleFocusRingBorderWidth": "--awsui-style-focus-ring-border-width-kcc2gu",
  "styleFocusRingBoxShadow": "--awsui-style-focus-ring-box-shadow-kcc2gu"
};
var custom_css_properties_default = customCSSPropertiesMap;

// node_modules/@cloudscape-design/components/internal/hooks/use-hidden-description/index.js
var import_react22 = __toESM(require_react());
function useHiddenDescription(description) {
  const id = useUniqueId();
  return {
    targetProps: {
      "aria-describedby": description ? id : void 0
    },
    descriptionEl: description ? import_react22.default.createElement("span", { id, hidden: true }, description) : null,
    descriptionId: id
  };
}

// node_modules/@cloudscape-design/components/button/icon-helper.js
var React15 = __toESM(require_react());
function getIconAlign(props) {
  const standalone = props.variant === "icon" || props.variant === "inline-icon";
  return standalone ? "left" : props.iconAlign;
}
function IconWrapper(_a) {
  var { iconName, iconUrl, iconAlt, iconSvg, iconSize, badge } = _a, props = __rest(_a, ["iconName", "iconUrl", "iconAlt", "iconSvg", "iconSize", "badge"]);
  if (!iconName && !iconUrl && !iconSvg) {
    return null;
  }
  return React15.createElement(internal_default, { className: clsx_m_default(styles_css_default6.icon, styles_css_default6[`icon-${getIconAlign(props)}`], props.iconClass), name: iconName, url: iconUrl, svg: iconSvg, alt: iconAlt, size: iconSize, badge });
}
function LeftIcon(props) {
  if (props.loading) {
    return React15.createElement(InternalSpinner, { className: clsx_m_default(styles_css_default6.icon, styles_css_default6["icon-left"]) });
  } else if (getIconAlign(props) === "left") {
    return React15.createElement(IconWrapper, Object.assign({}, props));
  }
  return null;
}
function RightIcon(props) {
  if (getIconAlign(props) === "right") {
    return React15.createElement(IconWrapper, Object.assign({}, props));
  }
  return null;
}

// node_modules/@cloudscape-design/components/button/analytics-metadata/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/button/analytics-metadata/styles.scoped.css";
var styles_css_default9 = {
  "label": "awsui_label_1f1d4_ocied_5"
};

// node_modules/@cloudscape-design/components/button/test-classes/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/button/test-classes/styles.scoped.css";
var styles_css_default10 = {
  "disabled-reason-tooltip": "awsui_disabled-reason-tooltip_1ueyk_ca6yt_5",
  "external-icon": "awsui_external-icon_1ueyk_ca6yt_9"
};

// node_modules/@cloudscape-design/components/button/internal.js
var InternalButton = import_react23.default.forwardRef((_a, ref) => {
  var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1;
  var { children, iconName, __iconClass, onClick, onFollow, iconAlign = "left", iconUrl, iconSvg, iconAlt, variant = "normal", loading = false, loadingText, disabled = false, disabledReason, wrapText = true, href, external, target: targetOverride, rel, download, formAction = "submit", ariaLabel, ariaDescribedby, ariaExpanded, ariaControls, fullWidth, badge, i18nStrings, style, __nativeAttributes, __internalRootRef = null, __focusable = false, __injectAnalyticsComponentMetadata = false, __title, __emitPerformanceMarks = true, analyticsAction = "click" } = _a, props = __rest(_a, ["children", "iconName", "__iconClass", "onClick", "onFollow", "iconAlign", "iconUrl", "iconSvg", "iconAlt", "variant", "loading", "loadingText", "disabled", "disabledReason", "wrapText", "href", "external", "target", "rel", "download", "formAction", "ariaLabel", "ariaDescribedby", "ariaExpanded", "ariaControls", "fullWidth", "badge", "i18nStrings", "style", "__nativeAttributes", "__internalRootRef", "__focusable", "__injectAnalyticsComponentMetadata", "__title", "__emitPerformanceMarks", "analyticsAction"]);
  const [showTooltip, setShowTooltip] = (0, import_react23.useState)(false);
  checkSafeUrl("Button", href);
  const isAnchor = Boolean(href);
  const target = targetOverride !== null && targetOverride !== void 0 ? targetOverride : external ? "_blank" : void 0;
  const isNotInteractive = loading || disabled;
  const isDisabledWithReason = (variant === "normal" || variant === "primary" || variant === "icon") && !!disabledReason && disabled;
  const hasAriaDisabled = loading && !disabled || disabled && __focusable || isDisabledWithReason;
  const shouldHaveContent = children && ["icon", "inline-icon", "flashbar-icon", "modal-dismiss", "inline-icon-pointer-target"].indexOf(variant) === -1;
  if ((iconName || iconUrl || iconSvg) && iconAlign === "right" && external) {
    warnOnce("Button", "A right-aligned icon should not be combined with an external icon.");
  }
  const buttonRef = (0, import_react23.useRef)(null);
  useForwardFocus(ref, buttonRef);
  const buttonContext = useButtonContext();
  const i18n = useInternalI18n("button");
  const uniqueId = useUniqueId("button");
  const { funnelInteractionId } = useFunnel();
  const { stepNumber, stepNameSelector } = useFunnelStep();
  const { subStepSelector, subStepNameSelector } = useFunnelSubStep();
  const performanceMarkAttributes = usePerformanceMarks("primaryButton", () => variant === "primary" && __emitPerformanceMarks && !loading && !disabled, buttonRef, () => {
    var _a2;
    return {
      loading,
      disabled,
      text: (_a2 = buttonRef.current) === null || _a2 === void 0 ? void 0 : _a2.innerText
    };
  }, [loading, disabled]);
  useModalContextLoadingButtonComponent(variant === "primary", loading);
  const { targetProps, descriptionEl } = useHiddenDescription(disabledReason);
  const handleClick = (event) => {
    if (isNotInteractive) {
      return event.preventDefault();
    }
    if (isAnchor && isPlainLeftClick(event)) {
      fireCancelableEvent(onFollow, { href, target }, event);
      if ((iconName === "external" || target === "_blank") && funnelInteractionId) {
        const stepName = getTextFromSelector(stepNameSelector);
        const subStepName = getTextFromSelector(subStepNameSelector);
        FunnelMetrics.externalLinkInteracted({
          funnelInteractionId,
          stepNumber,
          stepName,
          stepNameSelector,
          subStepSelector,
          subStepName,
          subStepNameSelector,
          elementSelector: getFunnelValueSelector(uniqueId),
          subStepAllSelector: getSubStepAllSelector()
        });
      }
    }
    const { altKey, button, ctrlKey, metaKey, shiftKey } = event;
    fireCancelableEvent(onClick, { altKey, button, ctrlKey, metaKey, shiftKey }, event);
    buttonContext.onClick({ variant });
  };
  const buttonClass = clsx_m_default(props.className, styles_css_default6.button, styles_css_default6[`variant-${variant}`], {
    [styles_css_default6.disabled]: isNotInteractive,
    [styles_css_default6["disabled-with-reason"]]: isDisabledWithReason,
    [styles_css_default6["button-no-wrap"]]: !wrapText,
    [styles_css_default6["button-no-text"]]: !shouldHaveContent,
    [styles_css_default6["full-width"]]: shouldHaveContent && fullWidth,
    [styles_css_default6.link]: isAnchor
  });
  const explicitTabIndex = __nativeAttributes && "tabIndex" in __nativeAttributes ? __nativeAttributes.tabIndex : void 0;
  const { tabIndex } = useSingleTabStopNavigation(buttonRef, {
    tabIndex: isAnchor && isNotInteractive && !isDisabledWithReason ? -1 : explicitTabIndex
  });
  const analyticsMetadata = disabled ? {} : {
    action: analyticsAction,
    detail: { label: { root: "self" } }
  };
  if (__injectAnalyticsComponentMetadata) {
    analyticsMetadata.component = {
      name: "awsui.Button",
      label: { root: "self" },
      properties: { variant, disabled: `${disabled}` }
    };
  }
  const buttonProps = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, props), __nativeAttributes), performanceMarkAttributes), {
    tabIndex,
    // https://github.com/microsoft/TypeScript/issues/36659
    ref: useMergeRefs(buttonRef, __internalRootRef),
    "aria-label": ariaLabel,
    "aria-describedby": ariaDescribedby,
    "aria-expanded": ariaExpanded,
    "aria-controls": ariaControls,
    // add ariaLabel as `title` as visible hint text
    title: __title !== null && __title !== void 0 ? __title : ariaLabel,
    className: buttonClass,
    onClick: handleClick,
    [DATA_ATTR_FUNNEL_VALUE]: uniqueId
  }), getAnalyticsMetadataAttribute(analyticsMetadata)), getAnalyticsLabelAttribute(shouldHaveContent ? `.${styles_css_default9.label}` : ""));
  const iconProps = {
    loading,
    iconName,
    iconAlign,
    iconUrl,
    iconSvg,
    iconAlt,
    variant,
    badge,
    iconClass: __iconClass,
    iconSize: variant === "modal-dismiss" ? "medium" : "normal"
  };
  const buttonContent = import_react23.default.createElement(
    import_react23.default.Fragment,
    null,
    import_react23.default.createElement(LeftIcon, Object.assign({}, iconProps)),
    shouldHaveContent && import_react23.default.createElement(
      import_react23.default.Fragment,
      null,
      import_react23.default.createElement("span", { className: clsx_m_default(styles_css_default6.content, styles_css_default9.label) }, children),
      external && import_react23.default.createElement(
        import_react23.default.Fragment,
        null,
        " ",
        import_react23.default.createElement(internal_default, { name: "external", className: styles_css_default10["external-icon"], ariaLabel: i18n("i18nStrings.externalIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.externalIconAriaLabel) })
      )
    ),
    import_react23.default.createElement(RightIcon, Object.assign({}, iconProps))
  );
  const { loadingButtonCount } = useFunnel();
  (0, import_react23.useEffect)(() => {
    if (loading) {
      loadingButtonCount.current++;
      return () => {
        loadingButtonCount.current--;
      };
    }
  }, [loading, loadingButtonCount]);
  const disabledReasonProps = Object.assign({ onFocus: isDisabledWithReason ? () => setShowTooltip(true) : void 0, onBlur: isDisabledWithReason ? () => setShowTooltip(false) : void 0, onMouseEnter: isDisabledWithReason ? () => setShowTooltip(true) : void 0, onMouseLeave: isDisabledWithReason ? () => setShowTooltip(false) : void 0 }, isDisabledWithReason ? targetProps : {});
  const disabledReasonContent = import_react23.default.createElement(
    import_react23.default.Fragment,
    null,
    descriptionEl,
    showTooltip && import_react23.default.createElement(Tooltip, { className: styles_css_default10["disabled-reason-tooltip"], trackRef: buttonRef, value: disabledReason, onDismiss: () => setShowTooltip(false) })
  );
  const stylePropertiesAndVariables = SYSTEM === "core" ? Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ borderRadius: (_b = style === null || style === void 0 ? void 0 : style.root) === null || _b === void 0 ? void 0 : _b.borderRadius, borderWidth: (_c = style === null || style === void 0 ? void 0 : style.root) === null || _c === void 0 ? void 0 : _c.borderWidth, paddingBlock: (_d = style === null || style === void 0 ? void 0 : style.root) === null || _d === void 0 ? void 0 : _d.paddingBlock, paddingInline: (_e = style === null || style === void 0 ? void 0 : style.root) === null || _e === void 0 ? void 0 : _e.paddingInline }, ((_f = style === null || style === void 0 ? void 0 : style.root) === null || _f === void 0 ? void 0 : _f.background) && {
    [custom_css_properties_default.styleBackgroundActive]: (_g = style.root.background) === null || _g === void 0 ? void 0 : _g.active,
    [custom_css_properties_default.styleBackgroundDefault]: (_h = style.root.background) === null || _h === void 0 ? void 0 : _h.default,
    [custom_css_properties_default.styleBackgroundDisabled]: (_j = style.root.background) === null || _j === void 0 ? void 0 : _j.disabled,
    [custom_css_properties_default.styleBackgroundHover]: (_k = style.root.background) === null || _k === void 0 ? void 0 : _k.hover
  }), ((_l = style === null || style === void 0 ? void 0 : style.root) === null || _l === void 0 ? void 0 : _l.borderColor) && {
    [custom_css_properties_default.styleBorderColorActive]: (_m = style.root.borderColor) === null || _m === void 0 ? void 0 : _m.active,
    [custom_css_properties_default.styleBorderColorDefault]: (_o = style.root.borderColor) === null || _o === void 0 ? void 0 : _o.default,
    [custom_css_properties_default.styleBorderColorDisabled]: (_p = style.root.borderColor) === null || _p === void 0 ? void 0 : _p.disabled,
    [custom_css_properties_default.styleBorderColorHover]: (_q = style.root.borderColor) === null || _q === void 0 ? void 0 : _q.hover
  }), ((_r = style === null || style === void 0 ? void 0 : style.root) === null || _r === void 0 ? void 0 : _r.color) && {
    [custom_css_properties_default.styleColorActive]: (_s = style.root.color) === null || _s === void 0 ? void 0 : _s.active,
    [custom_css_properties_default.styleColorDefault]: (_t = style.root.color) === null || _t === void 0 ? void 0 : _t.default,
    [custom_css_properties_default.styleColorDisabled]: (_u = style.root.color) === null || _u === void 0 ? void 0 : _u.disabled,
    [custom_css_properties_default.styleColorHover]: (_v = style.root.color) === null || _v === void 0 ? void 0 : _v.hover
  }), ((_w = style === null || style === void 0 ? void 0 : style.root) === null || _w === void 0 ? void 0 : _w.focusRing) && {
    [custom_css_properties_default.styleFocusRingBorderColor]: (_x = style.root.focusRing) === null || _x === void 0 ? void 0 : _x.borderColor,
    [custom_css_properties_default.styleFocusRingBorderRadius]: (_y = style.root.focusRing) === null || _y === void 0 ? void 0 : _y.borderRadius,
    [custom_css_properties_default.styleFocusRingBorderWidth]: (_z = style.root.focusRing) === null || _z === void 0 ? void 0 : _z.borderWidth
  }), ((_1 = (_0 = style === null || style === void 0 ? void 0 : style.root) === null || _0 === void 0 ? void 0 : _0.focusRing) === null || _1 === void 0 ? void 0 : _1.borderRadius) && {
    [custom_css_properties_default.styleFocusRingBorderRadius]: style.root.focusRing.borderRadius
  }) : void 0;
  if (isAnchor) {
    return import_react23.default.createElement(
      import_react23.default.Fragment,
      null,
      import_react23.default.createElement(
        "a",
        Object.assign({}, buttonProps, {
          href,
          target,
          // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target
          rel: rel !== null && rel !== void 0 ? rel : target === "_blank" ? "noopener noreferrer" : void 0,
          "aria-disabled": isNotInteractive ? true : void 0,
          download
        }, disabledReasonProps, { style: stylePropertiesAndVariables }),
        buttonContent,
        isDisabledWithReason && disabledReasonContent
      ),
      loading && loadingText && import_react23.default.createElement(internal_default2, { tagName: "span", hidden: true }, loadingText)
    );
  }
  return import_react23.default.createElement(
    import_react23.default.Fragment,
    null,
    import_react23.default.createElement(
      "button",
      Object.assign({}, buttonProps, { type: formAction === "none" ? "button" : "submit", disabled: disabled && !__focusable && !isDisabledWithReason, "aria-disabled": hasAriaDisabled ? true : void 0 }, disabledReasonProps, { style: stylePropertiesAndVariables }),
      buttonContent,
      isDisabledWithReason && disabledReasonContent
    ),
    loading && loadingText && import_react23.default.createElement(internal_default2, { tagName: "span", hidden: true }, loadingText)
  );
});
var internal_default3 = InternalButton;

export {
  useLocale,
  useInternalI18n,
  internal_default,
  styles_css_default7 as styles_css_default,
  arrow_default,
  TabTrap,
  isFocusable,
  getAllFocusables,
  getFirstFocusable,
  getLastFocusable,
  focus_lock_default,
  KeyCode,
  PopoverBody,
  PopoverContainer,
  Transition,
  Tooltip,
  ButtonContext,
  defaultValue,
  SingleTabStopNavigationContext,
  useSingleTabStopNavigation,
  SingleTabStopNavigationProvider,
  fireNonCancelableEvent,
  fireCancelableEvent,
  fireKeyboardEvent,
  hasModifierKeys,
  isPlainLeftClick,
  custom_css_properties_default,
  useForwardFocus,
  useHiddenDescription,
  useDOMAttribute,
  useEffectOnUpdate,
  usePerformanceMarks,
  checkSafeUrl,
  internal_default2,
  InternalSpinner,
  styles_css_default6 as styles_css_default2,
  InternalButton,
  internal_default3
};
//# sourceMappingURL=chunk-BHFBGMUP.js.map
