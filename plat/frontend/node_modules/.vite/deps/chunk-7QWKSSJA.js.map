{
  "version": 3,
  "sources": ["../../src/header/index.tsx", "../../src/header/internal.tsx", "../../src/header/analytics/use-table-integration.ts", "../../src/internal/analytics/utils/parse-count-text.ts", "../../@cloudscape-design/components/header/analytics-metadata/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { HeaderProps } from './interfaces';\nimport InternalHeader from './internal';\n\nexport { HeaderProps };\n\nexport default function Header({ variant = 'h2', ...props }: HeaderProps) {\n  const baseComponentProps = useBaseComponent('Header', {\n    props: { headingTagOverride: props.headingTagOverride, variant },\n  });\n  return <InternalHeader variant={variant} {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(Header, 'Header');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { MutableRefObject, useContext } from 'react';\nimport clsx from 'clsx';\n\nimport { useUniqueId } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsLabelAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { DATA_ATTR_FUNNEL_KEY, FUNNEL_KEY_SUBSTEP_NAME } from '../internal/analytics/selectors';\nimport { getBaseProps } from '../internal/base-component';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { useContainerHeader } from '../internal/context/container-header';\nimport { InfoLinkLabelContext } from '../internal/context/info-link-label-context';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { SomeRequired } from '../internal/types';\nimport { useTableIntegration } from './analytics/use-table-integration';\nimport { HeaderProps } from './interfaces';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface InternalHeaderProps extends SomeRequired<HeaderProps, 'variant'>, InternalBaseComponentProps {\n  __disableActionsWrapping?: boolean;\n  __headingTagRef?: MutableRefObject<HTMLHeadingElement | null>;\n  __headingTagTabIndex?: number;\n}\n\nexport default function InternalHeader({\n  variant,\n  headingTagOverride,\n  children,\n  actions,\n  counter,\n  description,\n  info,\n  __internalRootRef = null,\n  __disableActionsWrapping,\n  __headingTagRef,\n  __headingTagTabIndex,\n  ...restProps\n}: InternalHeaderProps) {\n  const isMobile = useMobile();\n  const HeadingTag = headingTagOverride ?? (variant === 'awsui-h1-sticky' ? 'h1' : variant);\n  const { isStuck } = useContext(StickyHeaderContext);\n  const baseProps = getBaseProps(restProps);\n  const isRefresh = useVisualRefresh();\n  const assignHeaderId = useContext(CollectionLabelContext).assignId;\n  const isInContainer = useContainerHeader();\n  const headingId = useUniqueId('heading');\n\n  useTableIntegration(counter);\n\n  if (assignHeaderId !== undefined) {\n    assignHeaderId(headingId);\n  }\n  // If is mobile there is no need to have the dynamic variant because it's scrolled out of view\n  const dynamicVariant = !isMobile && isStuck ? 'h2' : 'h1';\n  const variantOverride = variant === 'awsui-h1-sticky' ? (isRefresh ? dynamicVariant : 'h2') : variant;\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(\n        styles.root,\n        baseProps.className,\n        styles[`root-variant-${variantOverride}`],\n        isRefresh && styles.refresh,\n        !actions && [styles[`root-no-actions`]],\n        description && [styles[`root-has-description`]]\n      )}\n      ref={__internalRootRef}\n    >\n      <div\n        className={clsx(\n          styles.main,\n          styles[`main-variant-${variantOverride}`],\n          isRefresh && styles.refresh,\n          __disableActionsWrapping && [styles['no-wrap']]\n        )}\n      >\n        <div className={clsx(styles.title, styles[`title-variant-${variantOverride}`], isRefresh && styles.refresh)}>\n          <HeadingTag\n            className={clsx(styles.heading, styles[`heading-variant-${variantOverride}`])}\n            ref={__headingTagRef}\n            tabIndex={__headingTagTabIndex}\n            {...getAnalyticsLabelAttribute(`.${analyticsSelectors['heading-text']}`)}\n          >\n            <span\n              {...(isInContainer ? { [DATA_ATTR_FUNNEL_KEY]: FUNNEL_KEY_SUBSTEP_NAME } : {})}\n              className={clsx(\n                styles['heading-text'],\n                analyticsSelectors['heading-text'],\n                styles[`heading-text-variant-${variantOverride}`]\n              )}\n              id={headingId}\n            >\n              {children}\n            </span>\n            {counter !== undefined && <span className={styles.counter}> {counter}</span>}\n          </HeadingTag>\n          {info && (\n            <InfoLinkLabelContext.Provider value={headingId}>\n              {/* Exists to create a space between heading text and info so that a double-click selection on the last word of the heading doesn't also include info */}\n              <span className={styles['virtual-space']}> &nbsp;</span>\n              <span className={styles.info}>{info}</span>\n            </InfoLinkLabelContext.Provider>\n          )}\n        </div>\n        {actions && (\n          <div\n            className={clsx(\n              styles.actions,\n              styles[`actions-variant-${variantOverride}`],\n              isRefresh && styles.refresh,\n              !__disableActionsWrapping && [styles['actions-centered']]\n            )}\n          >\n            {actions}\n          </div>\n        )}\n      </div>\n      <Description variantOverride={variantOverride}>{description}</Description>\n    </div>\n  );\n}\n\nexport function Description({ children, variantOverride }: { children: React.ReactNode; variantOverride: string }) {\n  const isRefresh = useVisualRefresh();\n  return (\n    (children && (\n      <p\n        className={clsx(\n          styles.description,\n          styles[`description-variant-${variantOverride}`],\n          isRefresh && styles.refresh\n        )}\n      >\n        {children}\n      </p>\n    )) ||\n    null\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useMemo } from 'react';\n\nimport { parseCountValue } from '../../internal/analytics/utils/parse-count-text';\nimport { useTableComponentsContext } from '../../internal/context/table-component-context';\n\n/**\n * Custom hook that integrates table counter values with table component context.\n *\n * The extracted count value is automatically synchronized with the table header\n * component through the table context, updating the countText property.\n */\nexport const useTableIntegration = (countText: string | undefined) => {\n  const tableComponentContext = useTableComponentsContext();\n  const countValue = useMemo(() => parseCountValue(countText), [countText]);\n\n  useEffect(() => {\n    if (tableComponentContext?.headerRef?.current && countValue !== undefined) {\n      tableComponentContext.headerRef.current.totalCount = countValue;\n\n      return () => {\n        delete tableComponentContext.headerRef.current?.totalCount;\n      };\n    }\n  }, [tableComponentContext?.headerRef, countValue]);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Extracts the count value from table header/filter text.\n *\n * Parses various counter string formats and extracts the relevant numeric value:\n * - \"Items (100)\" - Extracts 100 (first number found)\n * - \"1/100\" - Extracts 100 (denominator of fraction, representing total count)\n * - \"100+\" - Extracts 100 (first number found)\n */\nexport const parseCountValue = (countText: string | undefined): number | undefined => {\n  if (!countText || typeof countText !== 'string') {\n    return undefined;\n  }\n\n  const target = countText.includes('/') ? countText.split('/')[1] : countText;\n  const match = target.match(/\\d+/);\n  return match ? parseInt(match[0], 10) : undefined;\n};\n", "\n    import './styles.scoped.css';\n    export default {\n  \"heading-text\": \"awsui_heading-text_105ke_268sp_5\"\n};\n  "],
  "mappings": "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",
  "names": ["import_react", "import_react", "_a", "styles_css_default", "React", "styles_css_default", "React"]
}
