{
  "version": 3,
  "sources": ["../../@cloudscape-design/collection-hooks/mjs/use-collection.js", "../../@cloudscape-design/collection-hooks/mjs/operations/filter.js", "../../@cloudscape-design/collection-hooks/mjs/date-utils/parse-iso-date.js", "../../@cloudscape-design/collection-hooks/mjs/date-utils/compare-dates.js", "../../@cloudscape-design/collection-hooks/mjs/logging.js", "../../@cloudscape-design/collection-hooks/mjs/operations/property-filter.js", "../../@cloudscape-design/collection-hooks/mjs/operations/sort.js", "../../@cloudscape-design/collection-hooks/mjs/operations/pagination.js", "../../@cloudscape-design/collection-hooks/mjs/operations/items-tree.js", "../../@cloudscape-design/collection-hooks/mjs/operations/compose-filters.js", "../../@cloudscape-design/collection-hooks/mjs/operations/index.js", "../../@cloudscape-design/collection-hooks/mjs/utils.js", "../../@cloudscape-design/collection-hooks/mjs/use-collection-state.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef } from 'react';\nimport { processItems, processSelectedItems, itemsAreEqual } from './operations/index.js';\nimport { createSyncProps } from './utils.js';\nimport { useCollectionState } from './use-collection-state.js';\nexport function useCollection(allItems, options) {\n    const collectionRef = useRef(null);\n    const [state, actions] = useCollectionState(options, collectionRef);\n    const { items, allPageItems, pagesCount, filteredItemsCount, actualPageIndex, itemsTree } = processItems(allItems, state, options);\n    const expandedItemsSet = new Set();\n    if (options.expandableRows) {\n        for (const item of state.expandedItems) {\n            expandedItemsSet.add(options.expandableRows.getId(item));\n        }\n    }\n    let visibleItems = items;\n    if (options.expandableRows) {\n        const flatItems = new Array();\n        const getId = options.expandableRows.getId;\n        const traverse = (items) => {\n            for (const item of items) {\n                flatItems.push(item);\n                if (expandedItemsSet.has(getId(item))) {\n                    traverse(itemsTree.getChildren(item));\n                }\n            }\n        };\n        traverse(items);\n        visibleItems = flatItems;\n    }\n    // Removing selected items that are no longer present in items unless keepSelection=true.\n    if (options.selection && !options.selection.keepSelection) {\n        const newSelectedItems = processSelectedItems(visibleItems, state.selectedItems, options.selection.trackBy);\n        if (!itemsAreEqual(newSelectedItems, state.selectedItems, options.selection.trackBy)) {\n            // This is a recommended pattern for how to handle the state, dependent on the incoming props\n            // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n            actions.setSelectedItems(newSelectedItems);\n        }\n    }\n    // Removing expanded items that are no longer present in items.\n    if (options.expandableRows) {\n        const newExpandedItems = visibleItems.filter(item => expandedItemsSet.has(options.expandableRows.getId(item)));\n        if (!itemsAreEqual(newExpandedItems, state.expandedItems, options.expandableRows.getId)) {\n            actions.setExpandedItems(newExpandedItems);\n        }\n    }\n    return Object.assign({ items,\n        allPageItems,\n        filteredItemsCount,\n        actions }, createSyncProps(options, state, actions, collectionRef, {\n        actualPageIndex,\n        pagesCount,\n        allItems,\n        allPageItems,\n        itemsTree,\n    }));\n}\n", "function defaultFilteringFunction(item, filteringText, filteringFields) {\n    if (filteringText.length === 0) {\n        return true;\n    }\n    filteringFields = filteringFields || Object.keys(item);\n    const lowFilteringText = filteringText.toLowerCase();\n    return filteringFields.some(key => {\n        const value = item[key];\n        if (value && typeof value === 'object') {\n            return false;\n        }\n        return String(value).toLowerCase().indexOf(lowFilteringText) > -1;\n    });\n}\nexport function createFilterPredicate(filtering, filteringText = '') {\n    var _a;\n    if (!filtering) {\n        return null;\n    }\n    const filteringFunction = (_a = filtering.filteringFunction) !== null && _a !== void 0 ? _a : defaultFilteringFunction;\n    return item => filteringFunction(item, filteringText, filtering.fields);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function parseIsoDate(isoDate) {\n    if (typeof isoDate === 'string') {\n        if (isoDate.includes('T')) {\n            return new Date(isoDate);\n        }\n        else {\n            return new Date(isoDate + 'T00:00:00');\n        }\n    }\n    return new Date(NaN);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseIsoDate } from './parse-iso-date.js';\n/**\n * Compares dates up to a day.\n * @param date - item value as Date.\n * @param dateToCompare - token value as ISO8601 date string.\n * @returns diff in milliseconds between date and dateToCompare with a step of one day.\n */\nexport function compareDates(date, dateToCompare) {\n    if (date instanceof Date && typeof dateToCompare === 'string') {\n        return startOfDay(date).getTime() - startOfDay(parseIsoDate(dateToCompare)).getTime();\n    }\n    return NaN;\n}\n/**\n * Compares dates up to a millisecond.\n * @param date - item value as Date.\n * @param dateToCompare - token value as ISO8601 date string.\n * @returns diff in milliseconds between date and dateToCompare with a step of one millisecond.\n */\nexport function compareTimestamps(date, dateToCompare) {\n    if (date instanceof Date && typeof dateToCompare === 'string') {\n        return date.getTime() - parseIsoDate(dateToCompare).getTime();\n    }\n    return NaN;\n}\nfunction startOfDay(date) {\n    const copy = new Date(date.getTime());\n    copy.setHours(0, 0, 0, 0);\n    return copy;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isDevelopment = process.env.NODE_ENV !== 'production';\nconst messageCache = new Set();\nexport function warnOnce(message) {\n    if (isDevelopment) {\n        const warning = `[AwsUi] collection-hooks ${message}`;\n        if (!messageCache.has(warning)) {\n            messageCache.add(warning);\n            console.warn(warning);\n        }\n    }\n}\n", "import { compareDates, compareTimestamps } from '../date-utils/compare-dates.js';\nimport { warnOnce } from '../logging.js';\nconst filterUsingOperator = (itemValue, { tokenValue, operator: { operator, match, tokenType }, }) => {\n    // For match=\"date\" or match=\"datetime\" we expect the value to be a Date object.\n    // The token value is expected to be an ISO date- or datetime string, example:\n    // match(operator=\"=\", token=\"2020-01-01\", value=new Date(\"2020-01-01\")) == true\n    if (match === 'date' || match === 'datetime') {\n        return matchDateValue({ tokenValue, itemValue, operator, match });\n    }\n    // For custom match functions there is no expectation to value or token type: the function is supposed\n    // to handle everything. It is recommended to treat both the token and the value as unknowns.\n    else if (typeof match === 'function') {\n        return match(itemValue, tokenValue);\n    }\n    else if (match) {\n        throw new Error('Unsupported `operator.match` type given.');\n    }\n    // For default matching logic we expect the value to be a primitive type or an object that matches by reference.\n    // The token can be an array (tokenType=\"enum\") or a value (tokenType=\"value\" or tokenType=undefined), examples:\n    // match(operator=\"=\", token=\"A\", value=\"A\") == true\n    // match(operator=\"=\", token=[\"A\", \"B\"], value=\"A\") == true\n    return matchPrimitiveValue({ tokenValue, itemValue, operator, tokenType });\n};\nfunction matchDateValue({ tokenValue, itemValue, operator, match, }) {\n    const comparator = match === 'date' ? compareDates : compareTimestamps;\n    const comparisonResult = comparator(itemValue, tokenValue);\n    switch (operator) {\n        case '<':\n            return comparisonResult < 0;\n        case '<=':\n            return comparisonResult <= 0;\n        case '>':\n            return comparisonResult > 0;\n        case '>=':\n            return comparisonResult >= 0;\n        case '=':\n            return comparisonResult === 0;\n        case '!=':\n            return comparisonResult !== 0;\n        default:\n            warnOnce(`Unsupported operator \"${operator}\" given for match=\"${match}\".`);\n            return false;\n    }\n}\nfunction matchPrimitiveValue({ tokenValue, itemValue, operator, tokenType, }) {\n    if (tokenType === 'enum') {\n        if (!tokenValue || !Array.isArray(tokenValue)) {\n            warnOnce('The token value must be an array when tokenType==\"enum\".');\n            return false;\n        }\n        switch (operator) {\n            case '=':\n                return tokenValue && tokenValue.includes(itemValue);\n            case '!=':\n                return !tokenValue || !tokenValue.includes(itemValue);\n            default:\n                warnOnce(`Unsupported operator \"${operator}\" given for tokenType==\"enum\".`);\n                return false;\n        }\n    }\n    switch (operator) {\n        case '<':\n            return itemValue < tokenValue;\n        case '<=':\n            return itemValue <= tokenValue;\n        case '>':\n            return itemValue > tokenValue;\n        case '>=':\n            return itemValue >= tokenValue;\n        case '=':\n            // eslint-disable-next-line eqeqeq\n            return itemValue == tokenValue;\n        case '!=':\n            // eslint-disable-next-line eqeqeq\n            return itemValue != tokenValue;\n        case ':':\n            return (itemValue + '').toLowerCase().indexOf((tokenValue + '').toLowerCase()) > -1;\n        case '!:':\n            return (itemValue + '').toLowerCase().indexOf((tokenValue + '').toLowerCase()) === -1;\n        case '^':\n            return (itemValue + '').toLowerCase().startsWith((tokenValue + '').toLowerCase());\n        case '!^':\n            return !(itemValue + '').toLowerCase().startsWith((tokenValue + '').toLowerCase());\n        // The unsupported operators result in an exception being thrown.\n        // The exception can be avoided if using the match function.\n        default:\n            throw new Error('Unsupported operator given.');\n    }\n}\nfunction freeTextFilter(tokenValue, item, operator, filteringPropertiesMap) {\n    // If the operator is not a negation, we just need one property of the object to match.\n    // If the operator is a negation, we want none of the properties of the object to match.\n    const isNegation = operator.startsWith('!');\n    return Object.keys(filteringPropertiesMap)[isNegation ? 'every' : 'some'](propertyKey => {\n        const { operators } = filteringPropertiesMap[propertyKey];\n        const propertyOperator = operators[operator];\n        if (!propertyOperator) {\n            return isNegation;\n        }\n        return filterUsingOperator(item[propertyKey], { tokenValue, operator: propertyOperator });\n    });\n}\nfunction filterByToken(token, item, filteringPropertiesMap) {\n    if (token.propertyKey) {\n        // token refers to a unknown property or uses an unsupported operator\n        if (!(token.propertyKey in filteringPropertiesMap) ||\n            !(token.operator in filteringPropertiesMap[token.propertyKey].operators)) {\n            return false;\n        }\n        const property = filteringPropertiesMap[token.propertyKey];\n        const operator = property.operators[token.operator];\n        const itemValue = (operator === null || operator === void 0 ? void 0 : operator.match)\n            ? item[token.propertyKey]\n            : fixupFalsyValues(item[token.propertyKey]);\n        return filterUsingOperator(itemValue, {\n            tokenValue: token.value,\n            operator: operator !== null && operator !== void 0 ? operator : { operator: token.operator },\n        });\n    }\n    return freeTextFilter(token.value, item, token.operator, filteringPropertiesMap);\n}\nfunction defaultFilteringFunction(filteringPropertiesMap) {\n    return (item, query) => {\n        var _a;\n        function evaluate(tokenOrGroup) {\n            if ('operation' in tokenOrGroup) {\n                let result = tokenOrGroup.operation === 'and' ? true : !tokenOrGroup.tokens.length;\n                for (const group of tokenOrGroup.tokens) {\n                    result = tokenOrGroup.operation === 'and' ? result && evaluate(group) : result || evaluate(group);\n                }\n                return result;\n            }\n            else {\n                return filterByToken(tokenOrGroup, item, filteringPropertiesMap);\n            }\n        }\n        return evaluate({\n            operation: query.operation,\n            tokens: (_a = query.tokenGroups) !== null && _a !== void 0 ? _a : query.tokens,\n        });\n    };\n}\nexport function createPropertyFilterPredicate(propertyFiltering, query = { tokens: [], operation: 'and' }) {\n    if (!propertyFiltering) {\n        return null;\n    }\n    const filteringPropertiesMap = propertyFiltering.filteringProperties.reduce((acc, { key, operators, defaultOperator }) => {\n        const operatorMap = { [defaultOperator !== null && defaultOperator !== void 0 ? defaultOperator : '=']: { operator: defaultOperator !== null && defaultOperator !== void 0 ? defaultOperator : '=' } };\n        operators === null || operators === void 0 ? void 0 : operators.forEach(op => {\n            if (typeof op === 'string') {\n                operatorMap[op] = { operator: op };\n            }\n            else {\n                operatorMap[op.operator] = { operator: op.operator, match: op.match, tokenType: op.tokenType };\n            }\n        });\n        acc[key] = { operators: operatorMap };\n        return acc;\n    }, {});\n    const filteringFunction = propertyFiltering.filteringFunction || defaultFilteringFunction(filteringPropertiesMap);\n    return item => filteringFunction(item, query);\n}\nexport const fixupFalsyValues = (value) => {\n    if (typeof value === 'boolean') {\n        return value + '';\n    }\n    if (value || value === 0) {\n        return value;\n    }\n    return '';\n};\n", "function getSorter(sortingField) {\n    if (!sortingField) {\n        return null;\n    }\n    return (row1, row2) => {\n        var _a, _b;\n        // Use empty string as a default value, because it works well to compare with both strings and numbers:\n        // Every number can be casted to a string, but not every string can be casted to a meaningful number,\n        // sometimes it is NaN.\n        const value1 = (_a = row1[sortingField]) !== null && _a !== void 0 ? _a : '';\n        const value2 = (_b = row2[sortingField]) !== null && _b !== void 0 ? _b : '';\n        if (typeof value1 === 'string' && typeof value2 === 'string') {\n            return value1.localeCompare(value2);\n        }\n        // use loose comparison to handle inconsistent data types\n        // eslint-disable-next-line eqeqeq\n        return value1 < value2 ? -1 : value1 == value2 ? 0 : 1;\n    };\n}\nexport function createComparator(sorting, state) {\n    var _a;\n    if (!sorting || !state) {\n        return null;\n    }\n    const direction = state.isDescending ? -1 : 1;\n    const comparator = (_a = state.sortingColumn.sortingComparator) !== null && _a !== void 0 ? _a : getSorter(state.sortingColumn.sortingField);\n    return comparator ? (a, b) => comparator(a, b) * direction : null;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_PAGE_SIZE = 10;\nexport function createPageProps(pagination, currentPageIndex, items) {\n    var _a;\n    if (!pagination) {\n        return null;\n    }\n    const pageSize = (_a = pagination.pageSize) !== null && _a !== void 0 ? _a : DEFAULT_PAGE_SIZE;\n    const pagesCount = Math.ceil(items.length / pageSize);\n    let pageIndex = currentPageIndex !== null && currentPageIndex !== void 0 ? currentPageIndex : 1;\n    if (pageIndex < 1 || (pageIndex > pagesCount && !pagination.allowPageOutOfRange) || Number.isNaN(pageIndex)) {\n        pageIndex = 1;\n    }\n    return { pageSize, pagesCount, pageIndex };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport class ItemsTree {\n    constructor(items, treeProps) {\n        var _a;\n        this.size = 0;\n        this.hasNesting = false;\n        this.roots = new Array();\n        this.idToChildren = new Map();\n        this.filter = (predicate) => {\n            if (!this.hasNesting) {\n                this.items = this.items.filter(predicate);\n                this.size = this.items.length;\n            }\n            else {\n                this.filterTree(predicate);\n            }\n            return this;\n        };\n        this.sort = (comparator) => {\n            if (!this.hasNesting) {\n                this.items = this.items.slice().sort(comparator);\n            }\n            else {\n                this.sortTree(comparator);\n            }\n            return this;\n        };\n        this.getChildren = (item) => {\n            var _a;\n            return (_a = (this.treeProps && this.idToChildren.get(this.treeProps.getId(item)))) !== null && _a !== void 0 ? _a : [];\n        };\n        this.getItems = () => {\n            if (this.hasNesting) {\n                return this.roots;\n            }\n            return this.items;\n        };\n        this.getSize = () => {\n            return this.size;\n        };\n        this.filterTree = (predicate) => {\n            const filterNode = (item) => {\n                const children = this.getChildren(item);\n                const filteredChildren = children.filter(filterNode);\n                this.size -= children.length - filteredChildren.length;\n                this.setChildren(item, filteredChildren);\n                return predicate(item) || filteredChildren.length > 0;\n            };\n            const roots = this.roots;\n            this.roots = this.roots.filter(filterNode);\n            this.size -= roots.length - this.roots.length;\n        };\n        this.sortTree = (comparator) => {\n            const sortLevel = (items) => {\n                items.sort(comparator);\n                for (const item of items) {\n                    sortLevel(this.getChildren(item));\n                }\n            };\n            sortLevel(this.roots);\n        };\n        this.size = items.length;\n        this.items = items;\n        this.treeProps = treeProps;\n        if (!treeProps) {\n            return;\n        }\n        // Assign item children.\n        for (const item of items) {\n            const parentId = treeProps.getParentId(item);\n            if (parentId === null) {\n                this.roots.push(item);\n            }\n            else {\n                const children = (_a = this.idToChildren.get(parentId)) !== null && _a !== void 0 ? _a : [];\n                children.push(item);\n                this.idToChildren.set(parentId, children);\n                this.hasNesting = true;\n            }\n        }\n        // Assign item levels.\n        const traverse = (item, level = 1) => {\n            var _a;\n            for (const child of (_a = this.idToChildren.get(treeProps.getId(item))) !== null && _a !== void 0 ? _a : []) {\n                traverse(child, level + 1);\n            }\n        };\n        this.roots.forEach(root => traverse(root));\n    }\n    setChildren(item, children) {\n        if (this.treeProps) {\n            this.idToChildren.set(this.treeProps.getId(item), children);\n        }\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function composeFilters(...predicates) {\n    return predicates.some(Boolean)\n        ? item => {\n            for (const predicate of predicates) {\n                if (predicate && !predicate(item)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        : null;\n}\n", "import { createFilterPredicate } from './filter.js';\nimport { createPropertyFilterPredicate } from './property-filter.js';\nimport { createComparator } from './sort.js';\nimport { createPageProps } from './pagination.js';\nimport { ItemsTree } from './items-tree.js';\nimport { composeFilters } from './compose-filters.js';\nexport function processItems(items, { filteringText, sortingState, currentPageIndex, propertyFilteringQuery }, { filtering, sorting, pagination, propertyFiltering, expandableRows }) {\n    const itemsTree = new ItemsTree(items, expandableRows);\n    const filterPredicate = composeFilters(createPropertyFilterPredicate(propertyFiltering, propertyFilteringQuery), createFilterPredicate(filtering, filteringText));\n    if (filterPredicate) {\n        itemsTree.filter(filterPredicate);\n    }\n    const comparator = createComparator(sorting, sortingState);\n    if (comparator) {\n        itemsTree.sort(comparator);\n    }\n    const allPageItems = itemsTree.getItems();\n    const filteredItemsCount = filterPredicate ? itemsTree.getSize() : undefined;\n    const pageProps = createPageProps(pagination, currentPageIndex, allPageItems);\n    if (pageProps) {\n        return {\n            items: allPageItems.slice((pageProps.pageIndex - 1) * pageProps.pageSize, pageProps.pageIndex * pageProps.pageSize),\n            allPageItems: allPageItems,\n            filteredItemsCount,\n            pagesCount: pageProps === null || pageProps === void 0 ? void 0 : pageProps.pagesCount,\n            actualPageIndex: pageProps === null || pageProps === void 0 ? void 0 : pageProps.pageIndex,\n            itemsTree,\n        };\n    }\n    return {\n        items: allPageItems,\n        allPageItems: allPageItems,\n        filteredItemsCount,\n        pagesCount: undefined,\n        actualPageIndex: undefined,\n        itemsTree,\n    };\n}\nexport const getTrackableValue = (trackBy, item) => {\n    if (!trackBy) {\n        return item;\n    }\n    if (typeof trackBy === 'function') {\n        return trackBy(item);\n    }\n    return item[trackBy];\n};\nexport const processSelectedItems = (items, selectedItems, trackBy) => {\n    const selectedSet = new Set();\n    selectedItems.forEach(item => selectedSet.add(getTrackableValue(trackBy, item)));\n    return items.filter(item => selectedSet.has(getTrackableValue(trackBy, item)));\n};\nexport const itemsAreEqual = (items1, items2, trackBy) => {\n    if (items1.length !== items2.length) {\n        return false;\n    }\n    const set1 = new Set();\n    items1.forEach(item => set1.add(getTrackableValue(trackBy, item)));\n    return items2.every(item => set1.has(getTrackableValue(trackBy, item)));\n};\n", "import { fixupFalsyValues } from './operations/property-filter.js';\nexport function collectionReducer(state, action) {\n    const newState = Object.assign({}, state);\n    switch (action.type) {\n        case 'selection':\n            newState.selectedItems = action.selectedItems;\n            break;\n        case 'expansion':\n            newState.expandedItems = action.expandedItems;\n            break;\n        case 'filtering':\n            newState.currentPageIndex = 1;\n            newState.filteringText = action.filteringText;\n            break;\n        case 'sorting':\n            newState.currentPageIndex = 1;\n            newState.sortingState = action.sortingState;\n            break;\n        case 'pagination':\n            newState.currentPageIndex = action.pageIndex;\n            break;\n        case 'property-filtering':\n            newState.currentPageIndex = 1;\n            newState.propertyFilteringQuery = action.query;\n            break;\n    }\n    return newState;\n}\nexport function createActions({ dispatch, collectionRef, }) {\n    return {\n        setFiltering(filteringText) {\n            var _a;\n            dispatch({ type: 'filtering', filteringText });\n            (_a = collectionRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop();\n        },\n        setSorting(state) {\n            var _a;\n            dispatch({ type: 'sorting', sortingState: state });\n            (_a = collectionRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop();\n        },\n        setCurrentPage(pageIndex) {\n            var _a;\n            dispatch({ type: 'pagination', pageIndex });\n            (_a = collectionRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop();\n        },\n        setSelectedItems(selectedItems) {\n            dispatch({ type: 'selection', selectedItems });\n        },\n        setPropertyFiltering(query) {\n            var _a;\n            dispatch({ type: 'property-filtering', query });\n            (_a = collectionRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop();\n        },\n        setExpandedItems(expandedItems) {\n            dispatch({ type: 'expansion', expandedItems });\n        },\n    };\n}\nexport function createSyncProps(options, { filteringText, sortingState, selectedItems, expandedItems, currentPageIndex, propertyFilteringQuery, }, actions, collectionRef, { pagesCount, actualPageIndex, allItems, allPageItems, itemsTree, }) {\n    var _a, _b, _c, _d, _e;\n    let empty = options.filtering\n        ? allItems.length\n            ? options.filtering.noMatch\n            : options.filtering.empty\n        : null;\n    empty = options.propertyFiltering\n        ? allItems.length\n            ? options.propertyFiltering.noMatch\n            : options.propertyFiltering.empty\n        : empty;\n    const filteringOptions = options.propertyFiltering\n        ? options.propertyFiltering.filteringProperties.reduce((acc, property) => {\n            Object.keys(allItems.reduce((acc, item) => {\n                acc['' + fixupFalsyValues(item[property.key])] = true;\n                return acc;\n            }, {})).forEach(value => {\n                if (value !== '') {\n                    acc.push({\n                        propertyKey: property.key,\n                        value,\n                    });\n                }\n            });\n            return acc;\n        }, [])\n        : [];\n    return {\n        collectionProps: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ empty }, (options.sorting\n            ? {\n                onSortingChange: ({ detail }) => {\n                    actions.setSorting(detail);\n                },\n                sortingColumn: sortingState === null || sortingState === void 0 ? void 0 : sortingState.sortingColumn,\n                sortingDescending: sortingState === null || sortingState === void 0 ? void 0 : sortingState.isDescending,\n            }\n            : {})), (options.expandableRows\n            ? {\n                expandableRows: {\n                    getItemChildren(item) {\n                        return itemsTree.getChildren(item);\n                    },\n                    isItemExpandable(item) {\n                        return itemsTree.getChildren(item).length > 0;\n                    },\n                    expandedItems,\n                    onExpandableItemToggle: ({ detail: { item, expanded } }) => {\n                        const getId = options.expandableRows.getId;\n                        if (expanded) {\n                            for (const stateItem of expandedItems) {\n                                if (getId(stateItem) === getId(item)) {\n                                    return;\n                                }\n                            }\n                            actions.setExpandedItems([...expandedItems, item]);\n                        }\n                        else {\n                            actions.setExpandedItems(expandedItems.filter(stateItem => getId(stateItem) !== getId(item)));\n                        }\n                    },\n                },\n                // The trackBy property is used to match expanded items by ID and not by object reference.\n                // The property can be overridden by the explicitly provided selection.trackBy.\n                // If that is the case, we assume both selection.trackBy and expandableRows.getId have the same result.\n                // If not, the expandable state won't be matched correctly by the table.\n                trackBy: options.expandableRows.getId,\n            }\n            : {})), (options.selection\n            ? {\n                onSelectionChange: ({ detail: { selectedItems } }) => {\n                    actions.setSelectedItems(selectedItems);\n                },\n                selectedItems,\n                trackBy: (_a = options.selection.trackBy) !== null && _a !== void 0 ? _a : (_b = options.expandableRows) === null || _b === void 0 ? void 0 : _b.getId,\n            }\n            : {})), { ref: collectionRef, firstIndex: 1, totalItemsCount: allPageItems.length }), (((_c = options.pagination) === null || _c === void 0 ? void 0 : _c.pageSize)\n            ? {\n                firstIndex: ((actualPageIndex !== null && actualPageIndex !== void 0 ? actualPageIndex : currentPageIndex) - 1) * options.pagination.pageSize + 1,\n            }\n            : {})),\n        filterProps: {\n            filteringText,\n            onChange: ({ detail: { filteringText } }) => {\n                actions.setFiltering(filteringText);\n            },\n        },\n        propertyFilterProps: {\n            query: propertyFilteringQuery,\n            onChange: ({ detail: query }) => {\n                actions.setPropertyFiltering(query);\n            },\n            filteringProperties: ((_d = options.propertyFiltering) === null || _d === void 0 ? void 0 : _d.filteringProperties) || [],\n            filteringOptions,\n            freeTextFiltering: (_e = options.propertyFiltering) === null || _e === void 0 ? void 0 : _e.freeTextFiltering,\n        },\n        paginationProps: {\n            currentPageIndex: actualPageIndex !== null && actualPageIndex !== void 0 ? actualPageIndex : currentPageIndex,\n            // pagesCount is always calculated when options.pagination is present\n            pagesCount: pagesCount,\n            onChange: ({ detail: { currentPageIndex } }) => {\n                actions.setCurrentPage(currentPageIndex);\n            },\n        },\n    };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useReducer, useMemo } from 'react';\nimport { createActions, collectionReducer } from './utils.js';\nexport function useCollectionState(options, collectionRef) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    const [state, dispatch] = useReducer(collectionReducer, {\n        selectedItems: (_b = (_a = options.selection) === null || _a === void 0 ? void 0 : _a.defaultSelectedItems) !== null && _b !== void 0 ? _b : [],\n        expandedItems: (_d = (_c = options.expandableRows) === null || _c === void 0 ? void 0 : _c.defaultExpandedItems) !== null && _d !== void 0 ? _d : [],\n        sortingState: (_e = options.sorting) === null || _e === void 0 ? void 0 : _e.defaultState,\n        currentPageIndex: (_g = (_f = options.pagination) === null || _f === void 0 ? void 0 : _f.defaultPage) !== null && _g !== void 0 ? _g : 1,\n        filteringText: (_j = (_h = options.filtering) === null || _h === void 0 ? void 0 : _h.defaultFilteringText) !== null && _j !== void 0 ? _j : '',\n        propertyFilteringQuery: (_l = (_k = options.propertyFiltering) === null || _k === void 0 ? void 0 : _k.defaultQuery) !== null && _l !== void 0 ? _l : { tokens: [], operation: 'and' },\n    });\n    const actions = useMemo(() => createActions({ dispatch, collectionRef }), [dispatch, collectionRef]);\n    return [state, actions];\n}\n"],
  "mappings": "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",
  "names": ["import_react", "defaultFilteringFunction", "_a", "items", "acc", "selectedItems", "filteringText", "currentPageIndex", "items"]
}
