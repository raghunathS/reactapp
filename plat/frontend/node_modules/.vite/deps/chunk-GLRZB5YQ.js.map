{
  "version": 3,
  "sources": ["../../balanced-match/index.js", "../../src/internal/analytics/index.ts", "../../src/internal/utils/dom.ts", "../../src/internal/utils/node-belongs.ts", "../../src/internal/analytics/context/analytics-context.ts", "../../src/internal/analytics/hooks/use-funnel.ts", "../../src/internal/context/modal-context.ts"],
  "sourcesContent": ["'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/* istanbul ignore file */\n\nimport { IComponentMetrics, IFunnelMetrics, IPerformanceMetrics } from './interfaces';\n\nexport function setFunnelMetrics(funnelMetrics: IFunnelMetrics) {\n  FunnelMetrics = funnelMetrics;\n}\nexport function setPerformanceMetrics(performanceMetrics: IPerformanceMetrics) {\n  PerformanceMetrics = performanceMetrics;\n}\nexport function setComponentMetrics(componentMetrics: IComponentMetrics) {\n  ComponentMetrics = componentMetrics;\n}\n\n/**\n * This is a stub implementation of the FunnelMetrics interface and will be replaced during\n * build time with the actual implementation.\n */\nexport let FunnelMetrics: IFunnelMetrics = {\n  funnelStart(): string {\n    return '';\n  },\n\n  funnelError(): void {},\n  funnelComplete(): void {},\n  funnelSuccessful(): void {},\n  funnelCancelled(): void {},\n  funnelChange(): void {},\n  funnelStepStart(): void {},\n  funnelStepComplete(): void {},\n  funnelStepNavigation(): void {},\n  funnelStepError(): void {},\n  funnelStepChange(): void {},\n  funnelSubStepStart(): void {},\n  funnelSubStepComplete(): void {},\n  funnelSubStepError(): void {},\n  helpPanelInteracted(): void {},\n  externalLinkInteracted(): void {},\n};\n\n/**\n * This is a stub implementation of the PerformanceMetrics interface and will be replaced during\n * build time with the actual implementation.\n */\nexport let PerformanceMetrics: IPerformanceMetrics = {\n  tableInteraction(): void {},\n  taskCompletionData(): void {},\n  modalPerformanceData(): void {},\n};\n\nexport let ComponentMetrics: IComponentMetrics = {\n  componentMounted(): string {\n    return '';\n  },\n\n  componentUpdated(): void {},\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport balanced from 'balanced-match';\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\n\nexport function isContainingBlock(element: HTMLElement): boolean {\n  const computedStyle = getComputedStyle(element);\n  return (\n    (!!computedStyle.transform && computedStyle.transform !== 'none') ||\n    (!!computedStyle.perspective && computedStyle.perspective !== 'none') ||\n    computedStyle.contain?.split(' ').some(s => ['layout', 'paint', 'strict', 'content'].includes(s))\n  );\n}\n\n/**\n * Returns an element that is used to position the given element.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block\n */\nexport function getContainingBlock(startElement: HTMLElement): HTMLElement | null {\n  if (!startElement.parentElement) {\n    return null;\n  }\n\n  return findUpUntil(startElement.parentElement, isContainingBlock) as HTMLElement;\n}\n\n/*\n * Allows to find multiple elements in the page each according to a specific test function,\n * but traversing the DOM only once.\n */\n\nexport function findUpUntilMultiple({\n  startElement,\n  tests,\n}: {\n  startElement: HTMLElement;\n  tests: Record<string, (el: HTMLElement) => boolean>;\n}) {\n  const keys = Object.keys(tests);\n  const elements: Record<string, HTMLElement> = {};\n  let current: HTMLElement | null = startElement;\n  while (current && Object.keys(elements).length < keys.length) {\n    current = current.parentElement;\n    // If a component is used within an svg (i.e. as foreignObject), then it will\n    // have some ancestor nodes that are SVGElement. We want to skip those,\n    // as they have very different properties to HTMLElements.\n    while (current && !isHTMLElement(current)) {\n      current = (current as Element).parentElement;\n    }\n    for (const key of keys) {\n      if (!elements[key] && current && tests[key](current)) {\n        elements[key] = current;\n      }\n    }\n  }\n  return elements;\n}\n\nconst cssVariableExpression = /--.+?\\s*,\\s*(.+)/;\n\n/**\n * Parses a CSS color value that might contain CSS Custom Properties\n * and returns a value that will be understood by the browser, no matter of support level.\n * If the browser support CSS Custom Properties, the value will be return as is. Otherwise,\n * the fallback value will be extracted and returned instead.\n */\nexport function parseCssVariable(value: string) {\n  if (typeof window === 'undefined') {\n    return value;\n  }\n\n  if (window.CSS?.supports?.('color', 'var(--dummy, #000)') ?? false) {\n    return value;\n  }\n\n  const varIndex = value.lastIndexOf('var(');\n  if (varIndex === -1) {\n    return value;\n  }\n\n  const expr = balanced('(', ')', value.substr(varIndex));\n  if (!expr) {\n    return value;\n  }\n\n  const match = expr.body.match(cssVariableExpression);\n  return match ? match[1] : value;\n}\n\n// The instanceof Node/HTMLElement/SVGElement checks can fail if the target element\n// belongs to a different window than the respective type.\n\nexport function isNode(target: unknown): target is Node {\n  return (\n    target instanceof Node ||\n    (target !== null &&\n      typeof target === 'object' &&\n      'nodeType' in target &&\n      typeof target.nodeType === 'number' &&\n      'nodeName' in target &&\n      typeof target.nodeName === 'string' &&\n      'parentNode' in target &&\n      typeof target.parentNode === 'object')\n  );\n}\n\nexport function isHTMLElement(target: unknown): target is HTMLElement {\n  return (\n    target instanceof HTMLElement ||\n    (isNode(target) &&\n      target.nodeType === Node.ELEMENT_NODE &&\n      'style' in target &&\n      typeof target.style === 'object' &&\n      typeof target.ownerDocument === 'object' &&\n      !isSVGElement(target))\n  );\n}\n\nexport function isSVGElement(target: unknown): target is SVGElement {\n  return (\n    target instanceof SVGElement ||\n    (isNode(target) &&\n      target.nodeType === Node.ELEMENT_NODE &&\n      'ownerSVGElement' in target &&\n      typeof target.ownerSVGElement === 'object')\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { findUpUntil, nodeContains } from '@cloudscape-design/component-toolkit/dom';\n\nimport { isHTMLElement, isNode } from './dom';\n\n/**\n * Checks whether the given node (target) belongs to the container.\n * The function is similar to nodeContains but also accounts for dropdowns with expandToViewport=true.\n *\n * @param container Container node\n * @param target Node that is checked to be a descendant of the container\n */\nexport function nodeBelongs(container: Node | null, target: Node | EventTarget | null): boolean {\n  if (!isNode(target)) {\n    return false;\n  }\n  const portal = findUpUntil(\n    target as HTMLElement,\n    node => node === container || (isHTMLElement(node) && !!node.dataset.awsuiReferrerId)\n  );\n  if (portal && portal === container) {\n    // We found the container as a direct ancestor without a portal\n    return true;\n  }\n  const referrer = isHTMLElement(portal) ? document.getElementById(portal.dataset.awsuiReferrerId ?? '') : null;\n  return referrer ? nodeContains(container, referrer) : nodeContains(container, target);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext, MutableRefObject, RefObject } from 'react';\n\nimport { AnalyticsMetadata, FunnelType, SubStepConfiguration } from '../interfaces';\nimport { getFunnelNameSelector } from '../selectors';\n\nexport type FunnelState = 'default' | 'validating' | 'complete' | 'cancelled';\n\nexport interface FunnelContextValue {\n  funnelInteractionId: string | undefined;\n  funnelIdentifier?: AnalyticsMetadata['instanceIdentifier'];\n  funnelErrorContext?: AnalyticsMetadata['errorContext'];\n  funnelFlowType?: AnalyticsMetadata['flowType'];\n  funnelType: FunnelType;\n  funnelNameSelector: string;\n  optionalStepNumbers: number[];\n  totalFunnelSteps: number;\n  funnelSubmit: () => void;\n  funnelCancel: () => void;\n  setFunnelInteractionId: (funnelInteractionId: string) => void;\n  submissionAttempt: number;\n  funnelNextOrSubmitAttempt: () => void;\n  funnelState: RefObject<FunnelState>;\n  errorCount: MutableRefObject<number>;\n  loadingButtonCount: MutableRefObject<number>;\n  latestFocusCleanupFunction: MutableRefObject<undefined | (() => void)>;\n  isInFunnel: boolean;\n  wizardCount: MutableRefObject<number>;\n}\n\nexport interface FunnelStepContextValue {\n  stepIdentifier?: AnalyticsMetadata['instanceIdentifier'];\n  stepErrorContext?: AnalyticsMetadata['errorContext'];\n  stepNameSelector: string;\n  stepNumber: number;\n  funnelStepProps?: Record<string, string | number | boolean | undefined>;\n  subStepCount: MutableRefObject<number>;\n  isInStep: boolean;\n  funnelInteractionId: string | undefined;\n  /** This function is called when the list of substeps in this step changes.  */\n  onStepChange: () => void;\n  subStepConfiguration: MutableRefObject<Map<number, SubStepConfiguration[] | undefined> | undefined>;\n}\n\nexport interface FunnelSubStepContextValue {\n  subStepIdentifier?: AnalyticsMetadata['instanceIdentifier'];\n  subStepErrorContext?: AnalyticsMetadata['errorContext'];\n  subStepId: string;\n  subStepSelector: string;\n  subStepNameSelector: string;\n  subStepRef: MutableRefObject<HTMLDivElement | null>;\n  mousePressed: MutableRefObject<boolean>;\n  /**\n   * `isFocusedSubStep` is almost the same as checking if document.activeElement\n   * is a child of the curren substep. However, `isFocusedSubStep` stays true\n   * while the mouse button is pressed down, even though some browsers move the focus\n   * to the body element during that time.\n   */\n  isFocusedSubStep: MutableRefObject<boolean>;\n\n  /**\n   * The focus cleanup function should be run when the user leaves the substep.\n   */\n  focusCleanupFunction: MutableRefObject<undefined | (() => void)>;\n  isNestedSubStep: boolean;\n  funnelSubStepProps?: Record<string, string | number | boolean | undefined>;\n}\n\n/* istanbul ignore next */\nexport const FunnelContext = createContext<FunnelContextValue>({\n  funnelInteractionId: undefined,\n  funnelNameSelector: getFunnelNameSelector(),\n  setFunnelInteractionId: () => {},\n  funnelType: 'single-page',\n  optionalStepNumbers: [],\n  totalFunnelSteps: 0,\n  funnelSubmit: () => {},\n  funnelCancel: () => {},\n  submissionAttempt: 0,\n  funnelNextOrSubmitAttempt: () => {},\n  funnelState: { current: 'default' },\n  errorCount: { current: 0 },\n  loadingButtonCount: { current: 0 },\n  latestFocusCleanupFunction: { current: undefined },\n  isInFunnel: false,\n  wizardCount: { current: 0 },\n});\n\nexport const FunnelStepContext = createContext<FunnelStepContextValue>({\n  stepNameSelector: '',\n  stepNumber: 0,\n  subStepCount: { current: 0 },\n  isInStep: false,\n  funnelInteractionId: undefined,\n  onStepChange: () => {},\n  subStepConfiguration: { current: new Map() },\n});\n\nexport const FunnelSubStepContext = createContext<FunnelSubStepContextValue>({\n  subStepId: '',\n  subStepSelector: '',\n  subStepNameSelector: '',\n  subStepRef: { current: null },\n  isNestedSubStep: false,\n  mousePressed: { current: false },\n  isFocusedSubStep: { current: false },\n  focusCleanupFunction: { current: undefined },\n});\n\nexport const FunnelNameSelectorContext = createContext<string | undefined>(undefined);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useContext, useRef } from 'react';\n\nimport { nodeBelongs } from '../../utils/node-belongs';\nimport { FunnelMetrics } from '../';\nimport {\n  FunnelContext,\n  FunnelContextValue,\n  FunnelNameSelectorContext,\n  FunnelStepContext,\n  FunnelSubStepContext,\n} from '../context/analytics-context';\nimport {\n  DATA_ATTR_FUNNEL_INTERACTION_ID,\n  DATA_ATTR_FUNNEL_SUBSTEP,\n  getSubStepAllSelector,\n  getTextFromSelector,\n} from '../selectors';\n\n/**\n * Custom React Hook to manage and interact with FunnelSubStep.\n * This hook will provide necessary properties and methods required\n * to track and manage interactions with a FunnelSubStep component.\n *\n * The `onFocus` method is used to track the beginning of interaction with the FunnelSubStep.\n * The `onBlur` method is used to track the completion of interaction with the FunnelSubStep.\n * The subStepId is a unique identifier for the funnel sub-step.\n * The subStepRef is a reference to the DOM element of the funnel sub-step.\n */\nexport const useFunnelSubStep = () => {\n  const context = useContext(FunnelSubStepContext);\n  const { funnelInteractionId, funnelIdentifier, funnelState, latestFocusCleanupFunction } = useFunnel();\n  const { stepNumber, stepIdentifier, stepNameSelector, subStepConfiguration } = useFunnelStep();\n\n  const {\n    subStepIdentifier,\n    subStepId,\n    subStepSelector,\n    subStepNameSelector,\n    subStepRef,\n    isNestedSubStep,\n    mousePressed,\n    isFocusedSubStep,\n    focusCleanupFunction,\n  } = context;\n\n  if (isNestedSubStep) {\n    return context;\n  }\n\n  const onFocus = async (event: React.FocusEvent<HTMLDivElement>) => {\n    const element = event.target;\n    // Ignore spurious focus events, such as when the browser window is focused again.\n    await new Promise(r => setTimeout(r, 1));\n    if (document.activeElement !== element) {\n      return;\n    }\n\n    if (isFocusedSubStep.current) {\n      return;\n    }\n    isFocusedSubStep.current = true;\n\n    if (funnelInteractionId && subStepId) {\n      /*\n        If the previously focused substep has provided a cleanup function, we\n        call it here on behalf of the previously focused substep.\n      */\n      latestFocusCleanupFunction.current?.();\n\n      const subStepName = getTextFromSelector(subStepNameSelector);\n      const stepName = getTextFromSelector(stepNameSelector);\n      const subStepNumber = subStepConfiguration.current\n        ?.get(stepNumber)\n        ?.find(step => step.name === subStepName)?.number;\n      FunnelMetrics.funnelSubStepStart({\n        funnelIdentifier,\n        funnelInteractionId,\n        subStepIdentifier,\n        subStepSelector,\n        subStepNameSelector,\n        subStepName,\n        subStepNumber,\n        stepIdentifier,\n        stepNumber,\n        stepName,\n        stepNameSelector,\n        subStepAllSelector: getSubStepAllSelector(),\n      });\n\n      /*\n        This cleanup function will be called when the user leaves this substep.\n        The function might be called either:\n\n          - by the next focused substep as `latestFocusCleanupFunction`\n            (through a separate instance of the function we're currently in), or\n\n          - by the same substep as `focusCleanupFunction`\n            (through the `onMouseUp` handler or the `onBlur` handler).\n      */\n      let cleanupFunctionHasBeenRun = false;\n      focusCleanupFunction.current = () => {\n        if (cleanupFunctionHasBeenRun) {\n          return;\n        }\n        cleanupFunctionHasBeenRun = true;\n\n        const subStepNumber = subStepConfiguration.current?.get(stepNumber)?.find(s => s.name === subStepName)?.number;\n\n        if (funnelState.current !== 'cancelled') {\n          FunnelMetrics.funnelSubStepComplete({\n            funnelIdentifier,\n            funnelInteractionId,\n            subStepIdentifier,\n            subStepSelector,\n            subStepNameSelector,\n            subStepName,\n            subStepNumber,\n            stepIdentifier,\n            stepNumber,\n            stepName,\n            stepNameSelector,\n            subStepAllSelector: getSubStepAllSelector(),\n          });\n        }\n      };\n      latestFocusCleanupFunction.current = focusCleanupFunction.current;\n    }\n  };\n\n  const onBlur = (event: React.FocusEvent<HTMLDivElement>) => {\n    if (mousePressed.current) {\n      /*\n       Ignore blur events that are caused by mouse interaction, because these events don't\n       always reflect user intention. For example, clicking the label of an interactive form\n       element will briefly blur it.\n       The mouse-caused events are handled in the global `onMouseUp` handler of the substep\n       context instead.\n       */\n      return;\n    }\n\n    if (!subStepRef.current || !event.relatedTarget || !nodeBelongs(subStepRef.current, event.relatedTarget)) {\n      isFocusedSubStep.current = false;\n\n      if (funnelInteractionId && subStepId && funnelState.current !== 'cancelled') {\n        /*\n         Run this substep's own focus cleanup function if another substep\n         hasn't already done it for us.\n         */\n        focusCleanupFunction.current?.();\n      }\n    }\n  };\n\n  const funnelSubStepProps: Record<string, any> = funnelInteractionId\n    ? {\n        [DATA_ATTR_FUNNEL_SUBSTEP]: subStepId,\n        onFocus,\n        onBlur,\n      }\n    : {};\n\n  return { funnelSubStepProps, ...context };\n};\n\n/**\n * Custom React Hook to manage and interact with FunnelStep.\n * This hook will provide necessary properties required to track\n * and manage interactions with a FunnelStep component.\n *\n * The 'data-analytics-funnel-step' property of funnelStepProps is used to track the index of the current step in the funnel.\n * The context contains additional properties of the FunnelStep.\n */\nexport const useFunnelStep = () => {\n  const context = useContext(FunnelStepContext);\n  return context;\n};\n\n/**\n * This function provides a stable React ref to the current funnel step information.\n */\nexport const useFunnelStepRef = () => {\n  const funnelStep = useFunnelStep();\n  const funnelStepRef = useRef<ReturnType<typeof useFunnelStep>>(funnelStep);\n  funnelStepRef.current = funnelStep;\n  return funnelStepRef;\n};\n\n/**\n * Custom React Hook to manage and interact with Funnel.\n * This hook will provide necessary properties required to track\n * and manage interactions with a Funnel component.\n *\n * The 'data-analytics-funnel-interaction-id' property of funnelProps is used to track the unique identifier of the current interaction with the funnel.\n */\nexport type FunnelProps = Record<string, string | number | boolean | undefined>;\ntype UseFunnel = () => FunnelContextValue & {\n  funnelProps: FunnelProps;\n};\n\nexport const useFunnel: UseFunnel = () => {\n  const context = useContext(FunnelContext);\n  const funnelProps: FunnelProps = context.funnelInteractionId\n    ? {\n        [DATA_ATTR_FUNNEL_INTERACTION_ID]: context.funnelInteractionId,\n      }\n    : {};\n\n  return { funnelProps, ...context };\n};\n\nexport const useFunnelNameSelector = () => {\n  const context = useContext(FunnelNameSelectorContext);\n  return context;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext, MutableRefObject, useContext } from 'react';\n\nexport interface ModalContextProps {\n  isInModal: boolean;\n  componentLoadingCount: MutableRefObject<number>;\n  emitTimeToContentReadyInModal: (loadCompleteTime: number) => void;\n}\n\nexport const ModalContext = createContext<ModalContextProps>({\n  isInModal: false,\n  componentLoadingCount: { current: 0 },\n  emitTimeToContentReadyInModal: () => {},\n});\n\nexport const useModalContext = () => {\n  const modalContext = useContext(ModalContext);\n  return modalContext;\n};\n"],
  "mappings": "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",
  "names": ["balanced", "balanced", "import_react", "subStepNumber", "_c", "_b", "_a", "import_react"]
}
