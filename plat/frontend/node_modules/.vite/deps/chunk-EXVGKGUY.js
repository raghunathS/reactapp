import {
  CollectionLabelContext,
  InfoLinkLabelContext,
  styles_css_default,
  useTableComponentsContext
} from "./chunk-OGO4BROP.js";
import {
  StickyHeaderContext,
  useContainerHeader,
  useMobile
} from "./chunk-KZLIHYDV.js";
import {
  DATA_ATTR_FUNNEL_KEY,
  FUNNEL_KEY_SUBSTEP_NAME,
  getAnalyticsLabelAttribute
} from "./chunk-A5LU4ML4.js";
import {
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  useBaseComponent,
  useUniqueId,
  useVisualRefresh
} from "./chunk-X4AES4TZ.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@cloudscape-design/components/header/index.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/header/internal.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/header/analytics/use-table-integration.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/analytics/utils/parse-count-text.js
var parseCountValue = (countText) => {
  if (!countText || typeof countText !== "string") {
    return void 0;
  }
  const target = countText.includes("/") ? countText.split("/")[1] : countText;
  const match = target.match(/\d+/);
  return match ? parseInt(match[0], 10) : void 0;
};

// node_modules/@cloudscape-design/components/header/analytics/use-table-integration.js
var useTableIntegration = (countText) => {
  const tableComponentContext = useTableComponentsContext();
  const countValue = (0, import_react.useMemo)(() => parseCountValue(countText), [countText]);
  (0, import_react.useEffect)(() => {
    var _a;
    if (((_a = tableComponentContext === null || tableComponentContext === void 0 ? void 0 : tableComponentContext.headerRef) === null || _a === void 0 ? void 0 : _a.current) && countValue !== void 0) {
      tableComponentContext.headerRef.current.totalCount = countValue;
      return () => {
        var _a2;
        (_a2 = tableComponentContext.headerRef.current) === null || _a2 === void 0 ? true : delete _a2.totalCount;
      };
    }
  }, [tableComponentContext === null || tableComponentContext === void 0 ? void 0 : tableComponentContext.headerRef, countValue]);
};

// node_modules/@cloudscape-design/components/header/analytics-metadata/styles.css.js
import "/Users/shikaradee/raghu/GenAi/MachineLearning/reactapp/plat/frontend/node_modules/@cloudscape-design/components/header/analytics-metadata/styles.scoped.css";
var styles_css_default2 = {
  "heading-text": "awsui_heading-text_105ke_268sp_5"
};

// node_modules/@cloudscape-design/components/header/internal.js
function InternalHeader(_a) {
  var { variant, headingTagOverride, children, actions, counter, description, info, __internalRootRef = null, __disableActionsWrapping, __headingTagRef, __headingTagTabIndex } = _a, restProps = __rest(_a, ["variant", "headingTagOverride", "children", "actions", "counter", "description", "info", "__internalRootRef", "__disableActionsWrapping", "__headingTagRef", "__headingTagTabIndex"]);
  const isMobile = useMobile();
  const HeadingTag = headingTagOverride !== null && headingTagOverride !== void 0 ? headingTagOverride : variant === "awsui-h1-sticky" ? "h1" : variant;
  const { isStuck } = (0, import_react2.useContext)(StickyHeaderContext);
  const baseProps = getBaseProps(restProps);
  const isRefresh = useVisualRefresh();
  const assignHeaderId = (0, import_react2.useContext)(CollectionLabelContext).assignId;
  const isInContainer = useContainerHeader();
  const headingId = useUniqueId("heading");
  useTableIntegration(counter);
  if (assignHeaderId !== void 0) {
    assignHeaderId(headingId);
  }
  const dynamicVariant = !isMobile && isStuck ? "h2" : "h1";
  const variantOverride = variant === "awsui-h1-sticky" ? isRefresh ? dynamicVariant : "h2" : variant;
  return import_react2.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, baseProps.className, styles_css_default[`root-variant-${variantOverride}`], isRefresh && styles_css_default.refresh, !actions && [styles_css_default[`root-no-actions`]], description && [styles_css_default[`root-has-description`]]), ref: __internalRootRef }),
    import_react2.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default.main, styles_css_default[`main-variant-${variantOverride}`], isRefresh && styles_css_default.refresh, __disableActionsWrapping && [styles_css_default["no-wrap"]]) },
      import_react2.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default.title, styles_css_default[`title-variant-${variantOverride}`], isRefresh && styles_css_default.refresh) },
        import_react2.default.createElement(
          HeadingTag,
          Object.assign({ className: clsx_m_default(styles_css_default.heading, styles_css_default[`heading-variant-${variantOverride}`]), ref: __headingTagRef, tabIndex: __headingTagTabIndex }, getAnalyticsLabelAttribute(`.${styles_css_default2["heading-text"]}`)),
          import_react2.default.createElement("span", Object.assign({}, isInContainer ? { [DATA_ATTR_FUNNEL_KEY]: FUNNEL_KEY_SUBSTEP_NAME } : {}, { className: clsx_m_default(styles_css_default["heading-text"], styles_css_default2["heading-text"], styles_css_default[`heading-text-variant-${variantOverride}`]), id: headingId }), children),
          counter !== void 0 && import_react2.default.createElement(
            "span",
            { className: styles_css_default.counter },
            " ",
            counter
          )
        ),
        info && import_react2.default.createElement(
          InfoLinkLabelContext.Provider,
          { value: headingId },
          import_react2.default.createElement("span", { className: styles_css_default["virtual-space"] }, " Â "),
          import_react2.default.createElement("span", { className: styles_css_default.info }, info)
        )
      ),
      actions && import_react2.default.createElement("div", { className: clsx_m_default(styles_css_default.actions, styles_css_default[`actions-variant-${variantOverride}`], isRefresh && styles_css_default.refresh, !__disableActionsWrapping && [styles_css_default["actions-centered"]]) }, actions)
    ),
    import_react2.default.createElement(Description, { variantOverride }, description)
  );
}
function Description({ children, variantOverride }) {
  const isRefresh = useVisualRefresh();
  return children && import_react2.default.createElement("p", { className: clsx_m_default(styles_css_default.description, styles_css_default[`description-variant-${variantOverride}`], isRefresh && styles_css_default.refresh) }, children) || null;
}

// node_modules/@cloudscape-design/components/header/index.js
function Header(_a) {
  var { variant = "h2" } = _a, props = __rest(_a, ["variant"]);
  const baseComponentProps = useBaseComponent("Header", {
    props: { headingTagOverride: props.headingTagOverride, variant }
  });
  return import_react3.default.createElement(InternalHeader, Object.assign({ variant }, props, baseComponentProps));
}
applyDisplayName(Header, "Header");

export {
  parseCountValue,
  InternalHeader,
  Description,
  Header
};
//# sourceMappingURL=chunk-EXVGKGUY.js.map
