{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/button/index.js", "../../@cloudscape-design/components/button/internal-do-not-use-core.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport CoreComponent from './internal-do-not-use-core';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { validateProps } from '../internal/base-component';\n\n\n\nconst Button = React.forwardRef((props, ref) => {\n    validateProps('Button', props, [\"style\"], {});\n    return React.createElement(CoreComponent, {ref,...props});\n});\n\n\napplyDisplayName(Button, 'Button');\nexport default Button;\n", "import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { InternalButton } from './internal';\nconst Button = React.forwardRef((_a, ref) => {\n    var { children, iconName, iconAlign = 'left', iconUrl, iconSvg, iconAlt, variant = 'normal', loading = false, loadingText, disabled = false, disabledReason, wrapText = true, href, target, rel, external = false, download, formAction = 'submit', ariaLabel, ariaDescribedby, onClick, onFollow, ariaExpanded, ariaControls, fullWidth, form, i18nStrings, style } = _a, props = __rest(_a, [\"children\", \"iconName\", \"iconAlign\", \"iconUrl\", \"iconSvg\", \"iconAlt\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"disabledReason\", \"wrapText\", \"href\", \"target\", \"rel\", \"external\", \"download\", \"formAction\", \"ariaLabel\", \"ariaDescribedby\", \"onClick\", \"onFollow\", \"ariaExpanded\", \"ariaControls\", \"fullWidth\", \"form\", \"i18nStrings\", \"style\"]);\n    const baseComponentProps = useBaseComponent('Button', {\n        props: { formAction, fullWidth, iconAlign, iconName, rel, target, external, variant, wrapText },\n        metadata: { hasDisabledReason: Boolean(disabledReason) },\n    });\n    const baseProps = getBaseProps(props);\n    return (React.createElement(InternalButton, Object.assign({}, baseProps, baseComponentProps, { ref: ref, iconName: iconName, iconAlign: iconAlign, iconUrl: iconUrl, iconSvg: iconSvg, iconAlt: iconAlt, variant: variant, loading: loading, loadingText: loadingText, disabled: disabled, disabledReason: disabledReason, wrapText: wrapText, href: href, target: target, rel: rel, external: external, download: download, formAction: formAction, ariaLabel: ariaLabel, ariaDescribedby: ariaDescribedby, onClick: onClick, onFollow: onFollow, ariaExpanded: ariaExpanded, ariaControls: ariaControls, fullWidth: fullWidth, form: form, i18nStrings: i18nStrings, style: style, __injectAnalyticsComponentMetadata: true }), children));\n});\napplyDisplayName(Button, 'Button');\nexport default Button;\n//# sourceMappingURL=index.js.map"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAEA,IAAAA,gBAAkB;;;ACClB,mBAAkB;AAKlB,IAAM,SAAS,aAAAC,QAAM,WAAW,CAAC,IAAI,QAAQ;AACzC,MAAI,EAAE,UAAU,UAAU,YAAY,QAAQ,SAAS,SAAS,SAAS,UAAU,UAAU,UAAU,OAAO,aAAa,WAAW,OAAO,gBAAgB,WAAW,MAAM,MAAM,QAAQ,KAAK,WAAW,OAAO,UAAU,aAAa,UAAU,WAAW,iBAAiB,SAAS,UAAU,cAAc,cAAc,WAAW,MAAM,aAAa,MAAM,IAAI,IAAI,QAAQ,OAAO,IAAI,CAAC,YAAY,YAAY,aAAa,WAAW,WAAW,WAAW,WAAW,WAAW,eAAe,YAAY,kBAAkB,YAAY,QAAQ,UAAU,OAAO,YAAY,YAAY,cAAc,aAAa,mBAAmB,WAAW,YAAY,gBAAgB,gBAAgB,aAAa,QAAQ,eAAe,OAAO,CAAC;AACttB,QAAM,qBAAqB,iBAAiB,UAAU;AAAA,IAClD,OAAO,EAAE,YAAY,WAAW,WAAW,UAAU,KAAK,QAAQ,UAAU,SAAS,SAAS;AAAA,IAC9F,UAAU,EAAE,mBAAmB,QAAQ,cAAc,EAAE;AAAA,EAC3D,CAAC;AACD,QAAM,YAAY,aAAa,KAAK;AACpC,SAAQ,aAAAA,QAAM,cAAc,gBAAgB,OAAO,OAAO,CAAC,GAAG,WAAW,oBAAoB,EAAE,KAAU,UAAoB,WAAsB,SAAkB,SAAkB,SAAkB,SAAkB,SAAkB,aAA0B,UAAoB,gBAAgC,UAAoB,MAAY,QAAgB,KAAU,UAAoB,UAAoB,YAAwB,WAAsB,iBAAkC,SAAkB,UAAoB,cAA4B,cAA4B,WAAsB,MAAY,aAA0B,OAAc,oCAAoC,KAAK,CAAC,GAAG,QAAQ;AAC9sB,CAAC;AACD,iBAAiB,QAAQ,QAAQ;AACjC,IAAO,mCAAQ;;;ADRf,IAAMC,UAAS,cAAAC,QAAM,WAAW,CAAC,OAAO,QAAQ;AAC5C,gBAAc,UAAU,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;AAC5C,SAAO,cAAAA,QAAM,cAAc,kCAAe,EAAC,KAAI,GAAG,MAAK,CAAC;AAC5D,CAAC;AAGD,iBAAiBD,SAAQ,QAAQ;AACjC,IAAO,iBAAQA;",
  "names": ["import_react", "React", "Button", "React"]
}
